<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- if you are in a web project with jsp-->
    <!-- As usual, add the following declarations for Spring MVC annotation driven approach:-->
	<!--
	<mvc:annotation-driven />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<context:component-scan base-package="net.codejava.spring" />
	-->
	<!-- The following declaration for a common view resolver that converts logical view names to actual JSP pages:-->
	<!--
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/WEB-INF/views/" />
    <property name="suffix" value=".jsp" />
	</bean>
	-->

    <!--
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"  value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="system"></property>
		<property name="password" value="oracle"></property>
	</bean>
    -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/geolocationdb" />
		<property name="username" value="siimobility" />
		<property name="password" value="siimobility" />
	</bean>

	<!--
	<bean id="dataSource2" class="org.apache.commons.dbcp.managed.BasicManagedDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/TestDB" />
		<property name="username" value="pankaj" />
		<property name="password" value="pankaj123" />
	</bean>
    -->

    <!--
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>spring_hibernate_files/database.properties</value>
		</property>
	</bean>
	<bean id="dataSource3" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
    -->


	<!-- Hibernate 4 SessionFactory Bean definition with JPA-->
	<bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="annotatedClasses">
				<list>
					<value>object.model.Website</value>
					<value>object.model.GeoDocument</value>
					<value>object.model.GeoDomainDocument</value>
					<value>object.model.Document</value>
					<value>object.model.InfoDocument</value>
				</list>
			</property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
					<prop key="hibernate.current_session_context_class">thread</prop>
					<prop key="hibernate.show_sql">false</prop>
				</props>
			</property>
	</bean>

	<!-- Hibernate 4 SessionFactory Bean definition with XML-->
	<!--
	<bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>
	<bean id="mysessionFactory"  class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>

		<property name="mappingResources">
			<list>
				<value>employee.hbm.xml</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle9iDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>

			</props>
		</property>
	</bean>
	-->

	<!-- The following declaration is for automatic transaction support for the SessionFactory:
	As mentioned in the DAOImpl class, we can specify transaction support by using the
	@Transactional annotation for transaction-aware methods-->
	<!--
	<tx:annotation-driven />
	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	-->
	<bean id="WebsiteDao" class="object.impl.WebsiteDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="GeoDocumentDao" class="object.impl.GeoDocumentDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="GeoDomainDocumentDao" class="object.impl.GeoDomainDocumentDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="InfoDocumentDao" class="object.impl.InfoDocumentDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="DocumentDao" class="object.impl.DocumentDaoImpl">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>
</beans>
