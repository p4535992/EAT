/* CVS $Id: $ */
package com.github.p4535992.util.jena.jena_vocabulary;
import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.ontology.*;
 
/**
 * Vocabulary definitions from http://schema.rdfs.org/all.rdf 
 * @author Auto-generated by schemagen on 16 lug 2014 13:56 
 */
public class SchemaOrg {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://schema.org/";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS 
     *  @return uri
     */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>The subject matter of the content.</p> */
    public static final OntProperty about = m_model.createOntProperty( "http://schema.org/about" );
    
    /** <p>The offer(s) -- e.home., product, quantity and price combinations -- included
     *  in the order.</p>
     */
    public static final OntProperty acceptedOffer = m_model.createOntProperty( "http://schema.org/acceptedOffer" );
    
    /** <p>The payment method(s) accepted by seller for this offer.</p> */
    public static final OntProperty acceptedPaymentMethod = m_model.createOntProperty( "http://schema.org/acceptedPaymentMethod" );
    
    /** <p>Either Yes/No, or a URL at which reservations can be made.</p> */
    public static final OntProperty acceptsReservations = m_model.createOntProperty( "http://schema.org/acceptsReservations" );
    
    /** <p>Password, PIN, or access code needed for delivery (e.home. from a locker).</p> */
    public static final OntProperty accessCode = m_model.createOntProperty( "http://schema.org/accessCode" );
    
    /** <p>Indicates that the resource is compatible with the referenced accessibility 
     *  API (WebSchemas wiki lists possible values).</p>
     */
    public static final OntProperty accessibilityAPI = m_model.createOntProperty( "http://schema.org/accessibilityAPI" );
    
    /** <p>Identifies input methods that are sufficient to fully control the described 
     *  resource (WebSchemas wiki lists possible values).</p>
     */
    public static final OntProperty accessibilityControl = m_model.createOntProperty( "http://schema.org/accessibilityControl" );
    
    /** <p>Content features of the resource, such as accessible media, alternatives and 
     *  supported enhancements for accessibility (WebSchemas wiki lists possible values).</p>
     */
    public static final OntProperty accessibilityFeature = m_model.createOntProperty( "http://schema.org/accessibilityFeature" );
    
    /** <p>A characteristic of the described resource that is physiologically dangerous 
     *  to some users. Related to WCAG 2.0 guideline 2.3. (WebSchemas wiki lists possible 
     *  values)</p>
     */
    public static final OntProperty accessibilityHazard = m_model.createOntProperty( "http://schema.org/accessibilityHazard" );
    
    /** <p>Specifies the Person that is legally accountable for the CreativeWork.</p> */
    public static final OntProperty accountablePerson = m_model.createOntProperty( "http://schema.org/accountablePerson" );
    
    /** <p>The organization or person from which the product was acquired.</p> */
    public static final OntProperty acquiredFrom = m_model.createOntProperty( "http://schema.org/acquiredFrom" );
    
    /** <p>The movement the muscle generates.</p> */
    public static final OntProperty action = m_model.createOntProperty( "http://schema.org/action" );
    
    /** <p>An active ingredient, typically chemical compounds and/or biologic substances.</p> */
    public static final OntProperty activeIngredient = m_model.createOntProperty( "http://schema.org/activeIngredient" );
    
    /** <p>Length of time to engage in the activity.</p> */
    public static final OntProperty activityDuration = m_model.createOntProperty( "http://schema.org/activityDuration" );
    
    /** <p>How often one should engage in the activity.</p> */
    public static final OntProperty activityFrequency = m_model.createOntProperty( "http://schema.org/activityFrequency" );
    
    /** <p>A cast member of the movie, tv/radio series, season, episode, or video.</p> */
    public static final OntProperty actor = m_model.createOntProperty( "http://schema.org/actor" );
    
    /** <p>A cast member of the movie, tv/radio series, season, episode, or video. (legacy 
     *  spelling; see singular form, actor)</p>
     */
    public static final OntProperty actors = m_model.createOntProperty( "http://schema.org/actors" );
    
    /** <p>An additional offer that can only be obtained in combination with the first 
     *  base offer (e.home. supplements and extensions that are available for a surcharge).</p>
     */
    public static final OntProperty addOn = m_model.createOntProperty( "http://schema.org/addOn" );
    
    /** <p>An additional name for a Person, can be used for a middle name.</p> */
    public static final OntProperty additionalName = m_model.createOntProperty( "http://schema.org/additionalName" );
    
    /** <p>An additional type for the item, typically used for adding more specific types 
     *  from external vocabularies in microdata syntax. This is a relationship between 
     *  something and a class that the thing is in. In RDFa syntax, it is better to 
     *  use the native RDFa syntax - the 'typeof' attribute - for multiple types. 
     *  Schema.org tools may have only weaker understanding of extra types, in particular 
     *  those defined externally.</p>
     */
    public static final OntProperty additionalType = m_model.createOntProperty( "http://schema.org/additionalType" );
    
    /** <p>Any additional component of the exercise prescription that may need to be 
     *  articulated to the patient. This may include the order of exercises, the number 
     *  of repetitions of movement, quantitative distance, progressions over time, 
     *  etc.</p>
     */
    public static final OntProperty additionalVariable = m_model.createOntProperty( "http://schema.org/additionalVariable" );
    
    /** <p>Physical address of the item.</p> */
    public static final OntProperty address = m_model.createOntProperty( "http://schema.org/address" );
    
    /** <p>The country. For example, USA. You can also provide the two-letter ISO 3166-1 
     *  alpha-2 country code.</p>
     */
    public static final OntProperty addressCountry = m_model.createOntProperty( "http://schema.org/addressCountry" );
    
    /** <p>The locality. For example, Mountain View.</p> */
    public static final OntProperty addressLocality = m_model.createOntProperty( "http://schema.org/addressLocality" );
    
    /** <p>The region. For example, CA.</p> */
    public static final OntProperty addressRegion = m_model.createOntProperty( "http://schema.org/addressRegion" );
    
    /** <p>A route by which this drug may be administered, e.home. 'oral'.</p> */
    public static final OntProperty administrationRoute = m_model.createOntProperty( "http://schema.org/administrationRoute" );
    
    /** <p>The amount of time that is required between accepting the offer and the actual 
     *  usage of the resource or service.</p>
     */
    public static final OntProperty advanceBookingRequirement = m_model.createOntProperty( "http://schema.org/advanceBookingRequirement" );
    
    /** <p>A possible complication and/or side effect of this therapy. If it is known 
     *  that an adverse outcome is serious (resulting in death, disability, or permanent 
     *  damage; requiring hospitalization; or is otherwise life-threatening or requires 
     *  immediate medical attention), tag it as a seriouseAdverseOutcome instead.</p>
     */
    public static final OntProperty adverseOutcome = m_model.createOntProperty( "http://schema.org/adverseOutcome" );
    
    /** <p>Drugs that affect the test's results.</p> */
    public static final OntProperty affectedBy = m_model.createOntProperty( "http://schema.org/affectedBy" );
    
    /** <p>An organization that this person is affiliated with. For example, a school/university, 
     *  a club, or a team.</p>
     */
    public static final OntProperty affiliation = m_model.createOntProperty( "http://schema.org/affiliation" );
    
    /** <p>The direct performer or driver of the action (animate or inanimate). e.home.
     *  *John* wrote a book.</p>
     */
    public static final OntProperty agent = m_model.createOntProperty( "http://schema.org/agent" );
    
    /** <p>The overall rating, based on a collection of reviews or ratings, of the item.</p> */
    public static final OntProperty aggregateRating = m_model.createOntProperty( "http://schema.org/aggregateRating" );
    
    /** <p>A music album.</p> */
    public static final OntProperty album = m_model.createOntProperty( "http://schema.org/album" );
    
    /** <p>A collection of music albums (legacy spelling; see singular form, album).</p> */
    public static final OntProperty albums = m_model.createOntProperty( "http://schema.org/albums" );
    
    /** <p>Any precaution, guidance, contraindication, etc. related to consumption of 
     *  alcohol while taking this drug.</p>
     */
    public static final OntProperty alcoholWarning = m_model.createOntProperty( "http://schema.org/alcoholWarning" );
    
    /** <p>The algorithm or rules to follow to compute the score.</p> */
    public static final OntProperty algorithm = m_model.createOntProperty( "http://schema.org/algorithm" );
    
    /** <p>A category of alignment between the learning resource and the framework node. 
     *  Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 
     *  'readingLevel', 'educationalSubject', and 'educationLevel'.</p>
     */
    public static final OntProperty alignmentType = m_model.createOntProperty( "http://schema.org/alignmentType" );
    
    /** <p>An alias for the item.</p> */
    public static final OntProperty alternateName = m_model.createOntProperty( "http://schema.org/alternateName" );
    
    /** <p>A secondary title of the CreativeWork.</p> */
    public static final OntProperty alternativeHeadline = m_model.createOntProperty( "http://schema.org/alternativeHeadline" );
    
    /** <p>Alumni of educational organization.</p> */
    public static final OntProperty alumni = m_model.createOntProperty( "http://schema.org/alumni" );
    
    /** <p>An educational organizations that the person is an alumni of.</p> */
    public static final OntProperty alumniOf = m_model.createOntProperty( "http://schema.org/alumniOf" );
    
    /** <p>The quantity of the goods included in the offer.</p> */
    public static final OntProperty amountOfThisGood = m_model.createOntProperty( "http://schema.org/amountOfThisGood" );
    
    /** <p>The muscle whose action counteracts the specified muscle.</p> */
    public static final OntProperty antagonist = m_model.createOntProperty( "http://schema.org/antagonist" );
    
    /** <p>The location in which the status applies.</p> */
    public static final OntProperty applicableLocation = m_model.createOntProperty( "http://schema.org/applicableLocation" );
    
    /** <p>Type of software application, e.home. "Game, Multimedia".</p> */
    public static final OntProperty applicationCategory = m_model.createOntProperty( "http://schema.org/applicationCategory" );
    
    /** <p>Subcategory of the application, e.home. "Arcade Game".</p> */
    public static final OntProperty applicationSubCategory = m_model.createOntProperty( "http://schema.org/applicationSubCategory" );
    
    /** <p>The name of the application suite to which the application belongs (e.home. Excel
     *  belongs to Office)</p>
     */
    public static final OntProperty applicationSuite = m_model.createOntProperty( "http://schema.org/applicationSuite" );
    
    /** <p>The delivery method(s) to which the delivery charge or payment charge specification 
     *  applies.</p>
     */
    public static final OntProperty appliesToDeliveryMethod = m_model.createOntProperty( "http://schema.org/appliesToDeliveryMethod" );
    
    /** <p>The payment method(s) to which the payment charge specification applies.</p> */
    public static final OntProperty appliesToPaymentMethod = m_model.createOntProperty( "http://schema.org/appliesToPaymentMethod" );
    
    /** <p>The area within which users can expect to reach the broadcast service.</p> */
    public static final OntProperty area = m_model.createOntProperty( "http://schema.org/area" );
    
    /** <p>The location served by this contact point (e.home., a phone number intended for
     *  Europeans vs. North Americans or only within the United States.)</p>
     */
    public static final OntProperty areaServed = m_model.createOntProperty( "http://schema.org/areaServed" );
    
    /** <p>The branches that comprise the arterial structure.</p> */
    public static final OntProperty arterialBranch = m_model.createOntProperty( "http://schema.org/arterialBranch" );
    
    /** <p>The actual body of the article.</p> */
    public static final OntProperty articleBody = m_model.createOntProperty( "http://schema.org/articleBody" );
    
    /** <p>Articles may belong to one or more 'sections' in a magazine or newspaper, 
     *  such as Sports, Lifestyle, etc.</p>
     */
    public static final OntProperty articleSection = m_model.createOntProperty( "http://schema.org/articleSection" );
    
    /** <p>An aspect of medical practice that is considered on the page, such as 'diagnosis', 
     *  'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.</p>
     */
    public static final OntProperty aspect = m_model.createOntProperty( "http://schema.org/aspect" );
    
    /** <p>Library file name e.home., mscorlib.dll, system.org.p4535992.mvc.webapp.dll</p> */
    public static final OntProperty assembly = m_model.createOntProperty( "http://schema.org/assembly" );
    
    /** <p>Associated product/technology version. e.home., .NET Framework 4.5</p> */
    public static final OntProperty assemblyVersion = m_model.createOntProperty( "http://schema.org/assemblyVersion" );
    
    /** <p>The anatomy of the underlying organ system or structures associated with this 
     *  entity.</p>
     */
    public static final OntProperty associatedAnatomy = m_model.createOntProperty( "http://schema.org/associatedAnatomy" );
    
    /** <p>A NewsArticle associated with the Media Object.</p> */
    public static final OntProperty associatedArticle = m_model.createOntProperty( "http://schema.org/associatedArticle" );
    
    /** <p>The media objects that encode this creative work. This property is a synonym 
     *  for encodings.</p>
     */
    public static final OntProperty associatedMedia = m_model.createOntProperty( "http://schema.org/associatedMedia" );
    
    /** <p>If applicable, a description of the pathophysiology associated with the anatomical 
     *  system, including potential abnormal changes in the mechanical, physical, 
     *  and biochemical functions of the system.</p>
     */
    public static final OntProperty associatedPathophysiology = m_model.createOntProperty( "http://schema.org/associatedPathophysiology" );
    
    /** <p>A person or organization attending the event.</p> */
    public static final OntProperty attendee = m_model.createOntProperty( "http://schema.org/attendee" );
    
    /** <p>A person attending the event (legacy spelling; see singular form, attendee).</p> */
    public static final OntProperty attendees = m_model.createOntProperty( "http://schema.org/attendees" );
    
    /** <p>The intended audience of the item, i.e. the group for whom the item was created.</p> */
    public static final OntProperty audience = m_model.createOntProperty( "http://schema.org/audience" );
    
    /** <p>The target group associated with a given audience (e.home. veterans, car owners,
     *  musicians, etc.) domain: Audience Range: Text</p>
     */
    public static final OntProperty audienceType = m_model.createOntProperty( "http://schema.org/audienceType" );
    
    /** <p>An embedded audio object.</p> */
    public static final OntProperty audio = m_model.createOntProperty( "http://schema.org/audio" );
    
    /** <p>The author of this content. Please note that author is special in that HTML 
     *  5 provides a special mechanism for indicating authorship via the rel tag. 
     *  That is equivalent to this and may be used interchangeably.</p>
     */
    public static final OntProperty author = m_model.createOntProperty( "http://schema.org/author" );
    
    /** <p>The availability of this item�for example In stock, Out of stock, Pre-order, 
     *  etc.</p>
     */
    public static final OntProperty availability = m_model.createOntProperty( "http://schema.org/availability" );
    
    /** <p>The end of the availability of the product or service included in the offer.</p> */
    public static final OntProperty availabilityEnds = m_model.createOntProperty( "http://schema.org/availabilityEnds" );
    
    /** <p>The beginning of the availability of the product or service included in the 
     *  offer.</p>
     */
    public static final OntProperty availabilityStarts = m_model.createOntProperty( "http://schema.org/availabilityStarts" );
    
    /** <p>The place(s) from which the offer can be obtained (e.home. store locations).</p> */
    public static final OntProperty availableAtOrFrom = m_model.createOntProperty( "http://schema.org/availableAtOrFrom" );
    
    /** <p>A means of accessing the service (e.home. a phone bank, a org.p4535992.mvc.webapp site, a location,
     *  etc.)</p>
     */
    public static final OntProperty availableChannel = m_model.createOntProperty( "http://schema.org/availableChannel" );
    
    /** <p>The delivery method(s) available for this offer.</p> */
    public static final OntProperty availableDeliveryMethod = m_model.createOntProperty( "http://schema.org/availableDeliveryMethod" );
    
    /** <p>When the item is available for pickup from the store, locker, etc.</p> */
    public static final OntProperty availableFrom = m_model.createOntProperty( "http://schema.org/availableFrom" );
    
    /** <p>The location in which the strength is available.</p> */
    public static final OntProperty availableIn = m_model.createOntProperty( "http://schema.org/availableIn" );
    
    /** <p>A language someone may use with the item.</p> */
    public static final OntProperty availableLanguage = m_model.createOntProperty( "http://schema.org/availableLanguage" );
    
    /** <p>A medical service available from this provider.</p> */
    public static final OntProperty availableService = m_model.createOntProperty( "http://schema.org/availableService" );
    
    /** <p>An available dosage strength for the drug.</p> */
    public static final OntProperty availableStrength = m_model.createOntProperty( "http://schema.org/availableStrength" );
    
    /** <p>A diagnostic test or procedure offered by this lab.</p> */
    public static final OntProperty availableTest = m_model.createOntProperty( "http://schema.org/availableTest" );
    
    /** <p>After this date, the item will no longer be available for pickup.</p> */
    public static final OntProperty availableThrough = m_model.createOntProperty( "http://schema.org/availableThrough" );
    
    /** <p>An award won by this person or for this creative work.</p> */
    public static final OntProperty award = m_model.createOntProperty( "http://schema.org/award" );
    
    /** <p>Awards won by this person or for this creative work. (legacy spelling; see 
     *  singular form, award)</p>
     */
    public static final OntProperty awards = m_model.createOntProperty( "http://schema.org/awards" );
    
    /** <p>Descriptive information establishing a historical perspective on the supplement. 
     *  May include the rationale for the name, the population where the supplement 
     *  first came to prominence, etc.</p>
     */
    public static final OntProperty background = m_model.createOntProperty( "http://schema.org/background" );
    
    /** <p>The base salary of the job.</p> */
    public static final OntProperty baseSalary = m_model.createOntProperty( "http://schema.org/baseSalary" );
    
    /** <p>Description of benefits associated with the job.</p> */
    public static final OntProperty benefits = m_model.createOntProperty( "http://schema.org/benefits" );
    
    /** <p>The highest value allowed in this rating system. If bestRating is omitted, 
     *  5 is assumed.</p>
     */
    public static final OntProperty bestRating = m_model.createOntProperty( "http://schema.org/bestRating" );
    
    /** <p>The billing address for the order.</p> */
    public static final OntProperty billingAddress = m_model.createOntProperty( "http://schema.org/billingAddress" );
    
    /** <p>This property specifies the minimal quantity and rounding increment that will 
     *  be the basis for the billing. The unit of measurement is specified by the 
     *  unitCode property.</p>
     */
    public static final OntProperty billingIncrement = m_model.createOntProperty( "http://schema.org/billingIncrement" );
    
    /** <p>The biomechanical properties of the bone.</p> */
    public static final OntProperty biomechnicalClass = m_model.createOntProperty( "http://schema.org/biomechnicalClass" );
    
    /** <p>Date of birth.</p> */
    public static final OntProperty birthDate = m_model.createOntProperty( "http://schema.org/birthDate" );
    
    /** <p>The bitrate of the media object.</p> */
    public static final OntProperty bitrate = m_model.createOntProperty( "http://schema.org/bitrate" );
    
    /** <p>A posting that is part of this blog.</p> */
    public static final OntProperty blogPost = m_model.createOntProperty( "http://schema.org/blogPost" );
    
    /** <p>The postings that are part of this blog (legacy spelling; see singular form, 
     *  blogPost).</p>
     */
    public static final OntProperty blogPosts = m_model.createOntProperty( "http://schema.org/blogPosts" );
    
    /** <p>The blood vessel that carries blood from the heart to the muscle.</p> */
    public static final OntProperty bloodSupply = m_model.createOntProperty( "http://schema.org/bloodSupply" );
    
    /** <p>Location in the body of the anatomical structure.</p> */
    public static final OntProperty bodyLocation = m_model.createOntProperty( "http://schema.org/bodyLocation" );
    
    /** <p>The edition of the book.</p> */
    public static final OntProperty bookEdition = m_model.createOntProperty( "http://schema.org/bookEdition" );
    
    /** <p>The format of the book.</p> */
    public static final OntProperty bookFormat = m_model.createOntProperty( "http://schema.org/bookFormat" );
    
    /** <p>A sub property of participant. The person that borrows the object being lent.</p> */
    public static final OntProperty borrower = m_model.createOntProperty( "http://schema.org/borrower" );
    
    /** <p>A polygon is the area enclosed by a point-to-point path for which the starting 
     *  and ending points are the same. A polygon is expressed as a series of four 
     *  or more spacedelimited points where the first and final points are identical.</p>
     */
    public static final OntProperty box = m_model.createOntProperty( "http://schema.org/box" );
    
    /** <p>The branches that delineate from the nerve bundle.</p> */
    public static final OntProperty branch = m_model.createOntProperty( "http://schema.org/branch" );
    
    /** <p>The larger organization that this local business is a branch of, if any.</p> */
    public static final OntProperty branchOf = m_model.createOntProperty( "http://schema.org/branchOf" );
    
    /** <p>The brand(s) associated with a product or service, or the brand(s) maintained 
     *  by an organization or business person.</p>
     */
    public static final OntProperty brand = m_model.createOntProperty( "http://schema.org/brand" );
    
    /** <p>A set of links that can help a user understand and navigate a website hierarchy.</p> */
    public static final OntProperty breadcrumb = m_model.createOntProperty( "http://schema.org/breadcrumb" );
    
    /** <p>Any precaution, guidance, contraindication, etc. related to this drug's use 
     *  by breastfeeding mothers.</p>
     */
    public static final OntProperty breastfeedingWarning = m_model.createOntProperty( "http://schema.org/breastfeedingWarning" );
    
    /** <p>The organization owning or operating the broadcast service.</p> */
    public static final OntProperty broadcaster = m_model.createOntProperty( "http://schema.org/broadcaster" );
    
    /** <p>Specifies browser requirements in human-readable text. For example,"requires 
     *  HTML5 support".</p>
     */
    public static final OntProperty browserRequirements = m_model.createOntProperty( "http://schema.org/browserRequirements" );
    
    /** <p>The business function (e.home. sell, lease, repair, dispose) of the offer or
     *  component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.</p>
     */
    public static final OntProperty businessFunction = m_model.createOntProperty( "http://schema.org/businessFunction" );
    
    /** <p>A sub property of participant. The participant/person/organization that bought 
     *  the object.</p>
     */
    public static final OntProperty buyer = m_model.createOntProperty( "http://schema.org/buyer" );
    
    /** <p>The artist that performed this album or recording.</p> */
    public static final OntProperty byArtist = m_model.createOntProperty( "http://schema.org/byArtist" );
    
    /** <p>The number of calories</p> */
    public static final OntProperty calories = m_model.createOntProperty( "http://schema.org/calories" );
    
    /** <p>A sub property of object. The candidate subject of this action.</p> */
    public static final OntProperty candidate = m_model.createOntProperty( "http://schema.org/candidate" );
    
    /** <p>The caption for this object.</p> */
    public static final OntProperty caption = m_model.createOntProperty( "http://schema.org/caption" );
    
    /** <p>The number of grams of carbohydrates.</p> */
    public static final OntProperty carbohydrateContent = m_model.createOntProperty( "http://schema.org/carbohydrateContent" );
    
    /** <p>The party responsible for the parcel delivery.</p> */
    public static final OntProperty carrier = m_model.createOntProperty( "http://schema.org/carrier" );
    
    /** <p>Specifies specific carrier(s) requirements for the application (e.home. an application
     *  may only work on a specific carrier network).</p>
     */
    public static final OntProperty carrierRequirements = m_model.createOntProperty( "http://schema.org/carrierRequirements" );
    
    /** <p>A data catalog which contains a dataset.</p> */
    public static final OntProperty catalog = m_model.createOntProperty( "http://schema.org/catalog" );
    
    /** <p>A category for the item. Greater signs or slashes can be used to informally 
     *  indicate a category hierarchy.</p>
     */
    public static final OntProperty category = m_model.createOntProperty( "http://schema.org/category" );
    
    /** <p>An underlying cause. More specifically, one of the causative agent(s) that 
     *  are most directly responsible for the pathophysiologic process that eventually 
     *  results in the occurrence.</p>
     */
    public static final OntProperty cause = m_model.createOntProperty( "http://schema.org/cause" );
    
    /** <p>The condition, complication, symptom, sign, etc. caused.</p> */
    public static final OntProperty causeOf = m_model.createOntProperty( "http://schema.org/causeOf" );
    
    /** <p>Maximal age of the child</p> */
    public static final OntProperty childMaxAge = m_model.createOntProperty( "http://schema.org/childMaxAge" );
    
    /** <p>Minimal age of the child</p> */
    public static final OntProperty childMinAge = m_model.createOntProperty( "http://schema.org/childMinAge" );
    
    /** <p>A child of the person.</p> */
    public static final OntProperty children = m_model.createOntProperty( "http://schema.org/children" );
    
    /** <p>The number of milligrams of cholesterol.</p> */
    public static final OntProperty cholesterolContent = m_model.createOntProperty( "http://schema.org/cholesterolContent" );
    
    /** <p>A circle is the circular region of a specified radius centered at a specified 
     *  latitude and longitude. A circle is expressed as a pair followed by a radius 
     *  in meters.</p>
     */
    public static final OntProperty circle = m_model.createOntProperty( "http://schema.org/circle" );
    
    /** <p>A citation or reference to another creative work, such as another publication, 
     *  org.p4535992.mvc.webapp page, scholarly article, etc.</p>
     */
    public static final OntProperty citation = m_model.createOntProperty( "http://schema.org/citation" );
    
    /** <p>Description of the absorption and elimination of drugs, including their concentration 
     *  (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).</p>
     */
    public static final OntProperty clincalPharmacology = m_model.createOntProperty( "http://schema.org/clincalPharmacology" );
    
    /** <p>Position of the clip within an ordered group of clips.</p> */
    public static final OntProperty clipNumber = m_model.createOntProperty( "http://schema.org/clipNumber" );
    
    /** <p>The closing hour of the place or service on the given day(s) of the week.</p> */
    public static final OntProperty closes = m_model.createOntProperty( "http://schema.org/closes" );
    
    /** <p>A medical code for the entity, taken from a controlled vocabulary or ontology 
     *  such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.</p>
     */
    public static final OntProperty code = m_model.createOntProperty( "http://schema.org/code" );
    
    /** <p>Link to the repository where the un-compiled, human readable code and related 
     *  code is located (SVN, github, CodePlex)</p>
     */
    public static final OntProperty codeRepository = m_model.createOntProperty( "http://schema.org/codeRepository" );
    
    /** <p>The actual code.</p> */
    public static final OntProperty codeValue = m_model.createOntProperty( "http://schema.org/codeValue" );
    
    /** <p>The coding system, e.home. 'ICD-10'.</p> */
    public static final OntProperty codingSystem = m_model.createOntProperty( "http://schema.org/codingSystem" );
    
    /** <p>A colleague of the person.</p> */
    public static final OntProperty colleague = m_model.createOntProperty( "http://schema.org/colleague" );
    
    /** <p>A colleague of the person (legacy spelling; see singular form, colleague).</p> */
    public static final OntProperty colleagues = m_model.createOntProperty( "http://schema.org/colleagues" );
    
    /** <p>A sub property of object. The collection target of the action.</p> */
    public static final OntProperty collection = m_model.createOntProperty( "http://schema.org/collection" );
    
    /** <p>The color of the product.</p> */
    public static final OntProperty color = m_model.createOntProperty( "http://schema.org/color" );
    
    /** <p>Comments, typically from users, on this CreativeWork.</p> */
    public static final OntProperty comment = m_model.createOntProperty( "http://schema.org/comment" );
    
    /** <p>The text of the UserComment.</p> */
    public static final OntProperty commentText = m_model.createOntProperty( "http://schema.org/commentText" );
    
    /** <p>The time at which the UserComment was made.</p> */
    public static final OntProperty commentTime = m_model.createOntProperty( "http://schema.org/commentTime" );
    
    /** <p>The underlying anatomical structures, such as organs, that comprise the anatomical 
     *  system.</p>
     */
    public static final OntProperty comprisedOf = m_model.createOntProperty( "http://schema.org/comprisedOf" );
    
    /** <p>A number that confirms the given order.</p> */
    public static final OntProperty confirmationNumber = m_model.createOntProperty( "http://schema.org/confirmationNumber" );
    
    /** <p>Other anatomical structures to which this structure is connected.</p> */
    public static final OntProperty connectedTo = m_model.createOntProperty( "http://schema.org/connectedTo" );
    
    /** <p>An option available on this contact point (e.home. a toll-free number or support
     *  for hearing-impaired callers.)</p>
     */
    public static final OntProperty contactOption = m_model.createOntProperty( "http://schema.org/contactOption" );
    
    /** <p>A contact point for a person or organization.</p> */
    public static final OntProperty contactPoint = m_model.createOntProperty( "http://schema.org/contactPoint" );
    
    /** <p>A contact point for a person or organization (legacy spelling; see singular 
     *  form, contactPoint).</p>
     */
    public static final OntProperty contactPoints = m_model.createOntProperty( "http://schema.org/contactPoints" );
    
    /** <p>A person or organization can have different contact points, for different 
     *  purposes. For example, a sales contact point, a PR contact point and so on. 
     *  This property is used to specify the kind of contact point.</p>
     */
    public static final OntProperty contactType = m_model.createOntProperty( "http://schema.org/contactType" );
    
    /** <p>The basic containment relation between places.</p> */
    public static final OntProperty containedIn = m_model.createOntProperty( "http://schema.org/containedIn" );
    
    /** <p>The location of the content.</p> */
    public static final OntProperty contentLocation = m_model.createOntProperty( "http://schema.org/contentLocation" );
    
    /** <p>Official rating of a piece of content�for example,'MPAA PG-13'.</p> */
    public static final OntProperty contentRating = m_model.createOntProperty( "http://schema.org/contentRating" );
    
    /** <p>File size in (mega/kilo) bytes.</p> */
    public static final OntProperty contentSize = m_model.createOntProperty( "http://schema.org/contentSize" );
    
    /** <p>Actual bytes of the media object, for example the image file or video file. 
     *  (previous spelling: contentURL)</p>
     */
    public static final OntProperty contentUrl = m_model.createOntProperty( "http://schema.org/contentUrl" );
    
    /** <p>A contraindication for this therapy.</p> */
    public static final OntProperty contraindication = m_model.createOntProperty( "http://schema.org/contraindication" );
    
    /** <p>A secondary contributor to the CreativeWork.</p> */
    public static final OntProperty contributor = m_model.createOntProperty( "http://schema.org/contributor" );
    
    /** <p>The time it takes to actually cook the dish, in ISO 8601 duration format.</p> */
    public static final OntProperty cookTime = m_model.createOntProperty( "http://schema.org/cookTime" );
    
    /** <p>The method of cooking, such as Frying, Steaming, ...</p> */
    public static final OntProperty cookingMethod = m_model.createOntProperty( "http://schema.org/cookingMethod" );
    
    /** <p>The party holding the legal copyright to the CreativeWork.</p> */
    public static final OntProperty copyrightHolder = m_model.createOntProperty( "http://schema.org/copyrightHolder" );
    
    /** <p>The year during which the claimed copyright for the CreativeWork was first 
     *  asserted.</p>
     */
    public static final OntProperty copyrightYear = m_model.createOntProperty( "http://schema.org/copyrightYear" );
    
    /** <p>Cost per unit of the drug, as reported by the source being tagged.</p> */
    public static final OntProperty cost = m_model.createOntProperty( "http://schema.org/cost" );
    
    /** <p>The category of cost, such as wholesale, retail, reimbursement cap, etc.</p> */
    public static final OntProperty costCategory = m_model.createOntProperty( "http://schema.org/costCategory" );
    
    /** <p>The currency (in 3-letter ISO 4217 format) of the drug cost.</p> */
    public static final OntProperty costCurrency = m_model.createOntProperty( "http://schema.org/costCurrency" );
    
    /** <p>Additional details to capture the origin of the cost data. For example, 'Medicare 
     *  Part B'.</p>
     */
    public static final OntProperty costOrigin = m_model.createOntProperty( "http://schema.org/costOrigin" );
    
    /** <p>The cost per unit of the drug.</p> */
    public static final OntProperty costPerUnit = m_model.createOntProperty( "http://schema.org/costPerUnit" );
    
    /** <p>Countries for which the application is not supported. You can also provide 
     *  the two-letter ISO 3166-1 alpha-2 country code.</p>
     */
    public static final OntProperty countriesNotSupported = m_model.createOntProperty( "http://schema.org/countriesNotSupported" );
    
    /** <p>Countries for which the application is supported. You can also provide the 
     *  two-letter ISO 3166-1 alpha-2 country code.</p>
     */
    public static final OntProperty countriesSupported = m_model.createOntProperty( "http://schema.org/countriesSupported" );
    
    /** <p>A sub property of location. The course where this action was taken.</p> */
    public static final OntProperty course = m_model.createOntProperty( "http://schema.org/course" );
    
    /** <p>The creator/author of this CreativeWork or UserComments. This is the same 
     *  as the Author property for CreativeWork.</p>
     */
    public static final OntProperty creator = m_model.createOntProperty( "http://schema.org/creator" );
    
    /** <p>The currency accepted (in ISO 4217 currency format).</p> */
    public static final OntProperty currenciesAccepted = m_model.createOntProperty( "http://schema.org/currenciesAccepted" );
    
    /** <p>Party placing the order.</p> */
    public static final OntProperty customer = m_model.createOntProperty( "http://schema.org/customer" );
    
    /** <p>A dataset contained in a catalog.</p> */
    public static final OntProperty dataset = m_model.createOntProperty( "http://schema.org/dataset" );
    
    /** <p>The date on which the CreativeWork was created.</p> */
    public static final OntProperty dateCreated = m_model.createOntProperty( "http://schema.org/dateCreated" );
    
    /** <p>The date on which the CreativeWork was most recently modified.</p> */
    public static final OntProperty dateModified = m_model.createOntProperty( "http://schema.org/dateModified" );
    
    /** <p>Publication date for the job posting.</p> */
    public static final OntProperty datePosted = m_model.createOntProperty( "http://schema.org/datePosted" );
    
    /** <p>Date of first broadcast/publication.</p> */
    public static final OntProperty datePublished = m_model.createOntProperty( "http://schema.org/datePublished" );
    
    /** <p>The location where the NewsArticle was produced.</p> */
    public static final OntProperty dateline = m_model.createOntProperty( "http://schema.org/dateline" );
    
    /** <p>The day of the week for which these opening hours are valid.</p> */
    public static final OntProperty dayOfWeek = m_model.createOntProperty( "http://schema.org/dayOfWeek" );
    
    /** <p>Date of death.</p> */
    public static final OntProperty deathDate = m_model.createOntProperty( "http://schema.org/deathDate" );
    
    /** <p>Destination address.</p> */
    public static final OntProperty deliveryAddress = m_model.createOntProperty( "http://schema.org/deliveryAddress" );
    
    /** <p>The typical delay between the receipt of the order and the goods leaving the 
     *  warehouse.</p>
     */
    public static final OntProperty deliveryLeadTime = m_model.createOntProperty( "http://schema.org/deliveryLeadTime" );
    
    /** <p>A sub property of instrument. The method of delivery</p> */
    public static final OntProperty deliveryMethod = m_model.createOntProperty( "http://schema.org/deliveryMethod" );
    
    /** <p>New entry added as the package passes through each leg of its journey (from 
     *  shipment to final delivery).</p>
     */
    public static final OntProperty deliveryStatus = m_model.createOntProperty( "http://schema.org/deliveryStatus" );
    
    /** <p>A relationship between an organization and a department of that organization, 
     *  also described as an organization (allowing different urls, logos, opening 
     *  hours). For example: a store with a pharmacy, or a bakery with a cafe.</p>
     */
    public static final OntProperty department = m_model.createOntProperty( "http://schema.org/department" );
    
    /** <p>Prerequisites needed to fulfill steps in article.</p> */
    public static final OntProperty dependencies = m_model.createOntProperty( "http://schema.org/dependencies" );
    
    /** <p>The depth of the product.</p> */
    public static final OntProperty depth = m_model.createOntProperty( "http://schema.org/depth" );
    
    /** <p>A short description of the item.</p> */
    public static final OntProperty description = m_model.createOntProperty( "http://schema.org/description" );
    
    /** <p>Device required to run the application. Used in cases where a specific make/model 
     *  is required to run the application.</p>
     */
    public static final OntProperty device = m_model.createOntProperty( "http://schema.org/device" );
    
    /** <p>One or more alternative conditions considered in the differential diagnosis 
     *  process.</p>
     */
    public static final OntProperty diagnosis = m_model.createOntProperty( "http://schema.org/diagnosis" );
    
    /** <p>An image containing a diagram that illustrates the structure and/or its component 
     *  substructures and/or connections with other structures.</p>
     */
    public static final OntProperty diagram = m_model.createOntProperty( "http://schema.org/diagram" );
    
    /** <p>A sub property of instrument. The died used in this action.</p> */
    public static final OntProperty diet = m_model.createOntProperty( "http://schema.org/diet" );
    
    /** <p>Nutritional information specific to the dietary plan. May include dietary 
     *  recommendations on what foods to avoid, what foods to consume, and specific 
     *  alterations/deviations from the USDA or other regulatory body's approved dietary 
     *  guidelines.</p>
     */
    public static final OntProperty dietFeatures = m_model.createOntProperty( "http://schema.org/dietFeatures" );
    
    /** <p>One of a set of differential diagnoses for the condition. Specifically, a 
     *  closely-related or competing diagnosis typically considered later in the cognitive 
     *  process whereby this medical condition is distinguished from others most likely 
     *  responsible for a similar collection of signs and symptoms to reach the most 
     *  parsimonious diagnosis or diagnoses in a patient.</p>
     */
    public static final OntProperty differentialDiagnosis = m_model.createOntProperty( "http://schema.org/differentialDiagnosis" );
    
    /** <p>The director of the movie, tv/radio episode or series.</p> */
    public static final OntProperty director = m_model.createOntProperty( "http://schema.org/director" );
    
    /** <p>The director of the movie, tv/radio episode or series. (legacy spelling; see 
     *  singular form, director)</p>
     */
    public static final OntProperty directors = m_model.createOntProperty( "http://schema.org/directors" );
    
    /** <p>Any discount applied (to an Order).</p> */
    public static final OntProperty discount = m_model.createOntProperty( "http://schema.org/discount" );
    
    /** <p>Code used to redeem a discount.</p> */
    public static final OntProperty discountCode = m_model.createOntProperty( "http://schema.org/discountCode" );
    
    /** <p>The currency (in 3-letter ISO 4217 format) of the discount.</p> */
    public static final OntProperty discountCurrency = m_model.createOntProperty( "http://schema.org/discountCurrency" );
    
    /** <p>Specifies the CreativeWork associated with the UserComment.</p> */
    public static final OntProperty discusses = m_model.createOntProperty( "http://schema.org/discusses" );
    
    /** <p>A link to the page containing the comments of the CreativeWork.</p> */
    public static final OntProperty discussionUrl = m_model.createOntProperty( "http://schema.org/discussionUrl" );
    
    /** <p>A sub property of asset. The distance travelled.</p> */
    public static final OntProperty distance = m_model.createOntProperty( "http://schema.org/distance" );
    
    /** <p>One of a set of signs and symptoms that can be used to distinguish this diagnosis 
     *  from others in the differential diagnosis.</p>
     */
    public static final OntProperty distinguishingSign = m_model.createOntProperty( "http://schema.org/distinguishingSign" );
    
    /** <p>A downloadable form of this dataset, at a specific location, in a specific 
     *  format.</p>
     */
    public static final OntProperty distribution = m_model.createOntProperty( "http://schema.org/distribution" );
    
    /** <p>Relates a property to a class that is (one of) the type(s) the property is 
     *  expected to be used on.</p>
     */
    public static final OntProperty domainIncludes = m_model.createOntProperty( "http://schema.org/domainIncludes" );
    
    /** <p>The time admission will commence.</p> */
    public static final OntProperty doorTime = m_model.createOntProperty( "http://schema.org/doorTime" );
    
    /** <p>A dosage form in which this drug/supplement is available, e.home. 'tablet', 'suspension',
     *  'injection'.</p>
     */
    public static final OntProperty dosageForm = m_model.createOntProperty( "http://schema.org/dosageForm" );
    
    /** <p>A dosing schedule for the drug for a given population, either observed, recommended, 
     *  or maximum dose based on the type used.</p>
     */
    public static final OntProperty doseSchedule = m_model.createOntProperty( "http://schema.org/doseSchedule" );
    
    /** <p>The unit of the dose, e.home. 'mg'.</p> */
    public static final OntProperty doseUnit = m_model.createOntProperty( "http://schema.org/doseUnit" );
    
    /** <p>The value of the dose, e.home. 500.</p> */
    public static final OntProperty doseValue = m_model.createOntProperty( "http://schema.org/doseValue" );
    
    /** <p>If the file can be downloaded, URL to download the binary.</p> */
    public static final OntProperty downloadUrl = m_model.createOntProperty( "http://schema.org/downloadUrl" );
    
    /** <p>The vasculature that the vein drains into.</p> */
    public static final OntProperty drainsTo = m_model.createOntProperty( "http://schema.org/drainsTo" );
    
    /** <p>A drug in this drug class.</p> */
    public static final OntProperty drug = m_model.createOntProperty( "http://schema.org/drug" );
    
    /** <p>The class of drug this belongs to (e.home., statins).</p> */
    public static final OntProperty drugClass = m_model.createOntProperty( "http://schema.org/drugClass" );
    
    /** <p>The unit in which the drug is measured, e.home. '5 mg tablet'.</p> */
    public static final OntProperty drugUnit = m_model.createOntProperty( "http://schema.org/drugUnit" );
    
    /** <p>The Dun &amp; Bradstreet DUNS number for identifying an organization or business 
     *  person.</p>
     */
    public static final OntProperty duns = m_model.createOntProperty( "http://schema.org/duns" );
    
    /** <p>A therapy that duplicates or overlaps this one.</p> */
    public static final OntProperty duplicateTherapy = m_model.createOntProperty( "http://schema.org/duplicateTherapy" );
    
    /** <p>The duration of the item (movie, audio recording, event, etc.) in ISO 8601 
     *  date format.</p>
     */
    public static final OntProperty duration = m_model.createOntProperty( "http://schema.org/duration" );
    
    /** <p>The duration of the warranty promise. Common unitCode values are ANN for year, 
     *  MON for months, or DAY for days.</p>
     */
    public static final OntProperty durationOfWarranty = m_model.createOntProperty( "http://schema.org/durationOfWarranty" );
    
    /** <p>Specifies the Person who edited the CreativeWork.</p> */
    public static final OntProperty editor = m_model.createOntProperty( "http://schema.org/editor" );
    
    /** <p>Educational background needed for the position.</p> */
    public static final OntProperty educationRequirements = m_model.createOntProperty( "http://schema.org/educationRequirements" );
    
    /** <p>An alignment to an established educational framework.</p> */
    public static final OntProperty educationalAlignment = m_model.createOntProperty( "http://schema.org/educationalAlignment" );
    
    /** <p>The framework to which the resource being described is aligned.</p> */
    public static final OntProperty educationalFramework = m_model.createOntProperty( "http://schema.org/educationalFramework" );
    
    /** <p>An educationalRole of an EducationalAudience</p> */
    public static final OntProperty educationalRole = m_model.createOntProperty( "http://schema.org/educationalRole" );
    
    /** <p>The purpose of a work in the context of education; for example, 'assignment', 
     *  'group work'.</p>
     */
    public static final OntProperty educationalUse = m_model.createOntProperty( "http://schema.org/educationalUse" );
    
    /** <p>The elevation of a location.</p> */
    public static final OntProperty elevation = m_model.createOntProperty( "http://schema.org/elevation" );
    
    /** <p>The type(s) of customers for which the given offer is valid.</p> */
    public static final OntProperty eligibleCustomerType = m_model.createOntProperty( "http://schema.org/eligibleCustomerType" );
    
    /** <p>The duration for which the given offer is valid.</p> */
    public static final OntProperty eligibleDuration = m_model.createOntProperty( "http://schema.org/eligibleDuration" );
    
    /** <p>The interval and unit of measurement of ordering quantities for which the 
     *  offer or price specification is valid. This allows e.home. specifying that a
     *  certain freight charge is valid only for a certain quantity.</p>
     */
    public static final OntProperty eligibleQuantity = m_model.createOntProperty( "http://schema.org/eligibleQuantity" );
    
    /** <p>The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, or the GeoShape for 
     *  the geo-political region(s) for which the offer or delivery charge specification 
     *  is valid.</p>
     */
    public static final OntProperty eligibleRegion = m_model.createOntProperty( "http://schema.org/eligibleRegion" );
    
    /** <p>The transaction volume, in a monetary unit, for which the offer or price specification 
     *  is valid, e.home. for indicating a minimal purchasing volume, to express free
     *  shipping above a certain order volume, or to limit the acceptance of credit 
     *  cards to purchases to a certain minimal amount.</p>
     */
    public static final OntProperty eligibleTransactionVolume = m_model.createOntProperty( "http://schema.org/eligibleTransactionVolume" );
    
    /** <p>Email address.</p> */
    public static final OntProperty email = m_model.createOntProperty( "http://schema.org/email" );
    
    /** <p>A URL pointing to a player for a specific video. In general, this is the information 
     *  in the src element of an embed tag and should not be the same as the content 
     *  of the loc tag. (previous spelling: embedURL)</p>
     */
    public static final OntProperty embedUrl = m_model.createOntProperty( "http://schema.org/embedUrl" );
    
    /** <p>Someone working for this organization.</p> */
    public static final OntProperty employee = m_model.createOntProperty( "http://schema.org/employee" );
    
    /** <p>People working for this organization. (legacy spelling; see singular form, 
     *  employee)</p>
     */
    public static final OntProperty employees = m_model.createOntProperty( "http://schema.org/employees" );
    
    /** <p>Type of employment (e.home. full-time, part-time, contract, temporary, seasonal,
     *  internship).</p>
     */
    public static final OntProperty employmentType = m_model.createOntProperty( "http://schema.org/employmentType" );
    
    /** <p>The creative work encoded by this media object</p> */
    public static final OntProperty encodesCreativeWork = m_model.createOntProperty( "http://schema.org/encodesCreativeWork" );
    
    /** <p>A media object that encode this CreativeWork.</p> */
    public static final OntProperty encoding = m_model.createOntProperty( "http://schema.org/encoding" );
    
    /** <p>mp3, mpeg4, etc.</p> */
    public static final OntProperty encodingFormat = m_model.createOntProperty( "http://schema.org/encodingFormat" );
    
    /** <p>The media objects that encode this creative work (legacy spelling; see singular 
     *  form, encoding).</p>
     */
    public static final OntProperty encodings = m_model.createOntProperty( "http://schema.org/encodings" );
    
    /** <p>The end date and time of the event or item (in ISO 8601 date format).</p> */
    public static final OntProperty endDate = m_model.createOntProperty( "http://schema.org/endDate" );
    
    /** <p>When the Action was performed: end time. This is for actions that span a period 
     *  of time. e.home. John wrote a book from January to *December*.</p>
     */
    public static final OntProperty endTime = m_model.createOntProperty( "http://schema.org/endTime" );
    
    /** <p>A sub property of participant. The person/organization being supported.</p> */
    public static final OntProperty endorsee = m_model.createOntProperty( "http://schema.org/endorsee" );
    
    /** <p>People or organizations that endorse the plan.</p> */
    public static final OntProperty endorsers = m_model.createOntProperty( "http://schema.org/endorsers" );
    
    /** <p>A sub property of location. The entertainment business where the action occurred.</p> */
    public static final OntProperty entertainmentBusiness = m_model.createOntProperty( "http://schema.org/entertainmentBusiness" );
    
    /** <p>The characteristics of associated patients, such as age, gender, race etc.</p> */
    public static final OntProperty epidemiology = m_model.createOntProperty( "http://schema.org/epidemiology" );
    
    /** <p>An episode of a TV/radio series or season</p> */
    public static final OntProperty episode = m_model.createOntProperty( "http://schema.org/episode" );
    
    /** <p>Position of the episode within an ordered group of episodes.</p> */
    public static final OntProperty episodeNumber = m_model.createOntProperty( "http://schema.org/episodeNumber" );
    
    /** <p>An episode of a TV/radio series or season (legacy spelling; see singular form, 
     *  episode)</p>
     */
    public static final OntProperty episodes = m_model.createOntProperty( "http://schema.org/episodes" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  equal to the object.</p>
     */
    public static final OntProperty equal = m_model.createOntProperty( "http://schema.org/equal" );
    
    /** <p>The condition, complication, or symptom whose risk is being estimated.</p> */
    public static final OntProperty estimatesRiskOf = m_model.createOntProperty( "http://schema.org/estimatesRiskOf" );
    
    /** <p>Upcoming or past event associated with this place or organization.</p> */
    public static final OntProperty event = m_model.createOntProperty( "http://schema.org/event" );
    
    /** <p>An eventStatus of an event represents its status; particularly useful when 
     *  an event is cancelled or rescheduled.</p>
     */
    public static final OntProperty eventStatus = m_model.createOntProperty( "http://schema.org/eventStatus" );
    
    /** <p>Upcoming or past events associated with this place or organization (legacy 
     *  spelling; see singular form, event).</p>
     */
    public static final OntProperty events = m_model.createOntProperty( "http://schema.org/events" );
    
    /** <p>Strength of evidence of the data used to formulate the guideline (enumerated).</p> */
    public static final OntProperty evidenceLevel = m_model.createOntProperty( "http://schema.org/evidenceLevel" );
    
    /** <p>Source of the data used to formulate the guidance, e.home. RCT, consensus opinion,
     *  etc.</p>
     */
    public static final OntProperty evidenceOrigin = m_model.createOntProperty( "http://schema.org/evidenceOrigin" );
    
    /** <p>A sub property of instrument. The exercise plan used on this action.</p> */
    public static final OntProperty exercisePlan = m_model.createOntProperty( "http://schema.org/exercisePlan" );
    
    /** <p>Type(s) of exercise or activity, such as strength training, flexibility training, 
     *  aerobics, cardiac rehabilitation, etc.</p>
     */
    public static final OntProperty exerciseType = m_model.createOntProperty( "http://schema.org/exerciseType" );
    
    /** <p>exif data for this object.</p> */
    public static final OntProperty exifData = m_model.createOntProperty( "http://schema.org/exifData" );
    
    /** <p>The earliest date the package may arrive.</p> */
    public static final OntProperty expectedArrivalFrom = m_model.createOntProperty( "http://schema.org/expectedArrivalFrom" );
    
    /** <p>The latest date the package may arrive.</p> */
    public static final OntProperty expectedArrivalUntil = m_model.createOntProperty( "http://schema.org/expectedArrivalUntil" );
    
    /** <p>The likely outcome in either the short term or long term of the medical condition.</p> */
    public static final OntProperty expectedPrognosis = m_model.createOntProperty( "http://schema.org/expectedPrognosis" );
    
    /** <p>Description of skills and experience needed for the position.</p> */
    public static final OntProperty experienceRequirements = m_model.createOntProperty( "http://schema.org/experienceRequirements" );
    
    /** <p>Medical expert advice related to the plan.</p> */
    public static final OntProperty expertConsiderations = m_model.createOntProperty( "http://schema.org/expertConsiderations" );
    
    /** <p>Date the content expires and is no longer useful or available. Useful for 
     *  videos.</p>
     */
    public static final OntProperty expires = m_model.createOntProperty( "http://schema.org/expires" );
    
    /** <p>Family name. In the U.S., the last name of an Person. This can be used along 
     *  with givenName instead of the Name property.</p>
     */
    public static final OntProperty familyName = m_model.createOntProperty( "http://schema.org/familyName" );
    
    /** <p>The number of grams of fat.</p> */
    public static final OntProperty fatContent = m_model.createOntProperty( "http://schema.org/fatContent" );
    
    /** <p>The fax number.</p> */
    public static final OntProperty faxNumber = m_model.createOntProperty( "http://schema.org/faxNumber" );
    
    /** <p>Features or modules provided by this application (and possibly required by 
     *  other applications).</p>
     */
    public static final OntProperty featureList = m_model.createOntProperty( "http://schema.org/featureList" );
    
    /** <p>The number of grams of fiber.</p> */
    public static final OntProperty fiberContent = m_model.createOntProperty( "http://schema.org/fiberContent" );
    
    /** <p>MIME format of the binary (e.home. application/zip).</p> */
    public static final OntProperty fileFormat = m_model.createOntProperty( "http://schema.org/fileFormat" );
    
    /** <p>Size of the application / package (e.home. 18MB). In the absence of a unit (MB,
     *  KB etc.), KB will be assumed.</p>
     */
    public static final OntProperty fileSize = m_model.createOntProperty( "http://schema.org/fileSize" );
    
    /** <p>A sub property of object. The person or organization being followed.</p> */
    public static final OntProperty followee = m_model.createOntProperty( "http://schema.org/followee" );
    
    /** <p>The most generic uni-directional social relation.</p> */
    public static final OntProperty follows = m_model.createOntProperty( "http://schema.org/follows" );
    
    /** <p>Typical or recommended followup care after the procedure is performed.</p> */
    public static final OntProperty followup = m_model.createOntProperty( "http://schema.org/followup" );
    
    /** <p>A sub property of location. The specific food establishment where the action 
     *  occurreed.</p>
     */
    public static final OntProperty foodEstablishment = m_model.createOntProperty( "http://schema.org/foodEstablishment" );
    
    /** <p>A sub property of location. The specific food event where the action occurred.</p> */
    public static final OntProperty foodEvent = m_model.createOntProperty( "http://schema.org/foodEvent" );
    
    /** <p>Any precaution, guidance, contraindication, etc. related to consumption of 
     *  specific foods while taking this drug.</p>
     */
    public static final OntProperty foodWarning = m_model.createOntProperty( "http://schema.org/foodWarning" );
    
    /** <p>A person who founded this organization.</p> */
    public static final OntProperty founder = m_model.createOntProperty( "http://schema.org/founder" );
    
    /** <p>A person who founded this organization (legacy spelling; see singular form, 
     *  founder).</p>
     */
    public static final OntProperty founders = m_model.createOntProperty( "http://schema.org/founders" );
    
    /** <p>The date that this organization was founded.</p> */
    public static final OntProperty foundingDate = m_model.createOntProperty( "http://schema.org/foundingDate" );
    
    /** <p>A flag to signal that the publication is accessible for free.</p> */
    public static final OntProperty free = m_model.createOntProperty( "http://schema.org/free" );
    
    /** <p>How often the dose is taken, e.home. 'daily'.</p> */
    public static final OntProperty frequency = m_model.createOntProperty( "http://schema.org/frequency" );
    
    /** <p>A sub property of location. The original location of the object or the agent 
     *  before the action.</p>
     */
    public static final OntProperty fromLocation = m_model.createOntProperty( "http://schema.org/fromLocation" );
    
    /** <p>Function of the anatomical structure.</p> */
    public static final OntProperty function = m_model.createOntProperty( "http://schema.org/function" );
    
    /** <p>The degree of mobility the joint allows.</p> */
    public static final OntProperty functionalClass = m_model.createOntProperty( "http://schema.org/functionalClass" );
    
    /** <p>Gender of the person.</p> */
    public static final OntProperty gender = m_model.createOntProperty( "http://schema.org/gender" );
    
    /** <p>Genre of the creative work</p> */
    public static final OntProperty genre = m_model.createOntProperty( "http://schema.org/genre" );
    
    /** <p>The geo coordinates of the place.</p> */
    public static final OntProperty geo = m_model.createOntProperty( "http://schema.org/geo" );
    
    /** <p>The geographic area associated with the audience.</p> */
    public static final OntProperty geographicArea = m_model.createOntProperty( "http://schema.org/geographicArea" );
    
    /** <p>Given name. In the U.S., the first name of a Person. This can be used along 
     *  with familyName instead of the Name property.</p>
     */
    public static final OntProperty givenName = m_model.createOntProperty( "http://schema.org/givenName" );
    
    /** <p>The Global Location Number (GLN, sometimes also referred to as International 
     *  Location Number or ILN) of the respective organization, person, or place. 
     *  The GLN is a 13-digit number used to identify parties and physical locations.</p>
     */
    public static final OntProperty globalLocationNumber = m_model.createOntProperty( "http://schema.org/globalLocationNumber" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  greater than the object.</p>
     */
    public static final OntProperty greater = m_model.createOntProperty( "http://schema.org/greater" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  greater than or equal to the object.</p>
     */
    public static final OntProperty greaterOrEqual = m_model.createOntProperty( "http://schema.org/greaterOrEqual" );
    
    /** <p>The GTIN-13 code of the product, or the product to which the offer refers. 
     *  This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit 
     *  UPC codes can be converted into a GTIN-13 code by simply adding a preceeding 
     *  zero.</p>
     */
    public static final OntProperty gtin13 = m_model.createOntProperty( "http://schema.org/gtin13" );
    
    /** <p>The GTIN-14 code of the product, or the product to which the offer refers.</p> */
    public static final OntProperty gtin14 = m_model.createOntProperty( "http://schema.org/gtin14" );
    
    /** <p>The GTIN-8 code of the product, or the product to which the offer refers. 
     *  This code is also known as EAN/UCC-8 or 8-digit EAN.</p>
     */
    public static final OntProperty gtin8 = m_model.createOntProperty( "http://schema.org/gtin8" );
    
    /** <p>A medical guideline related to this entity.</p> */
    public static final OntProperty guideline = m_model.createOntProperty( "http://schema.org/guideline" );
    
    /** <p>Date on which this guideline's recommendation was made.</p> */
    public static final OntProperty guidelineDate = m_model.createOntProperty( "http://schema.org/guidelineDate" );
    
    /** <p>The medical conditions, treatments, etc. that are the subject of the guideline.</p> */
    public static final OntProperty guidelineSubject = m_model.createOntProperty( "http://schema.org/guidelineSubject" );
    
    /** <p>Method used for delivery or shipping.</p> */
    public static final OntProperty hasDeliveryMethod = m_model.createOntProperty( "http://schema.org/hasDeliveryMethod" );
    
    /** <p>Points-of-Sales operated by the organization or person.</p> */
    public static final OntProperty hasPOS = m_model.createOntProperty( "http://schema.org/hasPOS" );
    
    /** <p>Headline of the article</p> */
    public static final OntProperty headline = m_model.createOntProperty( "http://schema.org/headline" );
    
    /** <p>Expectations for health conditions of target audience</p> */
    public static final OntProperty healthCondition = m_model.createOntProperty( "http://schema.org/healthCondition" );
    
    /** <p>The height of the item.</p> */
    public static final OntProperty height = m_model.createOntProperty( "http://schema.org/height" );
    
    /** <p>The highest price of all offers available.</p> */
    public static final OntProperty highPrice = m_model.createOntProperty( "http://schema.org/highPrice" );
    
    /** <p>Organization offering the job position.</p> */
    public static final OntProperty hiringOrganization = m_model.createOntProperty( "http://schema.org/hiringOrganization" );
    
    /** <p>A contact location for a person's residence.</p> */
    public static final OntProperty homeLocation = m_model.createOntProperty( "http://schema.org/homeLocation" );
    
    /** <p>An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.</p> */
    public static final OntProperty honorificPrefix = m_model.createOntProperty( "http://schema.org/honorificPrefix" );
    
    /** <p>An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.</p> */
    public static final OntProperty honorificSuffix = m_model.createOntProperty( "http://schema.org/honorificSuffix" );
    
    /** <p>A hospital with which the physician or office is affiliated.</p> */
    public static final OntProperty hospitalAffiliation = m_model.createOntProperty( "http://schema.org/hospitalAffiliation" );
    
    /** <p>The hours during which this contact point is available.</p> */
    public static final OntProperty hoursAvailable = m_model.createOntProperty( "http://schema.org/hoursAvailable" );
    
    /** <p>How the procedure is performed.</p> */
    public static final OntProperty howPerformed = m_model.createOntProperty( "http://schema.org/howPerformed" );
    
    /** <p>A physical examination that can identify this sign.</p> */
    public static final OntProperty identifyingExam = m_model.createOntProperty( "http://schema.org/identifyingExam" );
    
    /** <p>A diagnostic test that can identify this sign.</p> */
    public static final OntProperty identifyingTest = m_model.createOntProperty( "http://schema.org/identifyingTest" );
    
    /** <p>The illustrator of the book.</p> */
    public static final OntProperty illustrator = m_model.createOntProperty( "http://schema.org/illustrator" );
    
    /** <p>URL of an image of the item.</p> */
    public static final OntProperty image = m_model.createOntProperty( "http://schema.org/image" );
    
    /** <p>Imaging technique used.</p> */
    public static final OntProperty imagingTechnique = m_model.createOntProperty( "http://schema.org/imagingTechnique" );
    
    /** <p>The album to which this recording belongs.</p> */
    public static final OntProperty inAlbum = m_model.createOntProperty( "http://schema.org/inAlbum" );
    
    /** <p>The language of the content. please use one of the language codes from the 
     *  IETF BCP 47 standard.</p>
     */
    public static final OntProperty inLanguage = m_model.createOntProperty( "http://schema.org/inLanguage" );
    
    /** <p>The playlist to which this recording belongs.</p> */
    public static final OntProperty inPlaylist = m_model.createOntProperty( "http://schema.org/inPlaylist" );
    
    /** <p>Description of bonus and commission compensation aspects of the job.</p> */
    public static final OntProperty incentives = m_model.createOntProperty( "http://schema.org/incentives" );
    
    /** <p>A modifiable or non-modifiable risk factor included in the calculation, e.home.
     *  age, coexisting condition.</p>
     */
    public static final OntProperty includedRiskFactor = m_model.createOntProperty( "http://schema.org/includedRiskFactor" );
    
    /** <p>This links to a node or nodes indicating the exact quantity of the products 
     *  included in the offer.</p>
     */
    public static final OntProperty includesObject = m_model.createOntProperty( "http://schema.org/includesObject" );
    
    /** <p>The condition, complication, etc. influenced by this factor.</p> */
    public static final OntProperty increasesRiskOf = m_model.createOntProperty( "http://schema.org/increasesRiskOf" );
    
    /** <p>A factor that indicates use of this therapy for treatment and/or prevention 
     *  of a condition, symptom, etc. For therapies such as drugs, indications can 
     *  include both officially-approved indications as well as off-label uses. These 
     *  can be distinguished by using the ApprovedIndication subtype of MedicalIndication.</p>
     */
    public static final OntProperty indication = m_model.createOntProperty( "http://schema.org/indication" );
    
    /** <p>The industry associated with the job position.</p> */
    public static final OntProperty industry = m_model.createOntProperty( "http://schema.org/industry" );
    
    /** <p>The actual infectious agent, such as a specific bacterium.</p> */
    public static final OntProperty infectiousAgent = m_model.createOntProperty( "http://schema.org/infectiousAgent" );
    
    /** <p>The class of infectious agent (bacteria, prion, etc.) that causes the disease.</p> */
    public static final OntProperty infectiousAgentClass = m_model.createOntProperty( "http://schema.org/infectiousAgentClass" );
    
    /** <p>An ingredient used in the recipe.</p> */
    public static final OntProperty ingredients = m_model.createOntProperty( "http://schema.org/ingredients" );
    
    /** <p>The place of attachment of a muscle, or what the muscle moves.</p> */
    public static final OntProperty insertion = m_model.createOntProperty( "http://schema.org/insertion" );
    
    /** <p>URL at which the app may be installed, if different from the URL of the item.</p> */
    public static final OntProperty installUrl = m_model.createOntProperty( "http://schema.org/installUrl" );
    
    /** <p>The object that helped the agent perform the action. e.home. John wrote a book
     *  with *a pen*.</p>
     */
    public static final OntProperty instrument = m_model.createOntProperty( "http://schema.org/instrument" );
    
    /** <p>Quantitative measure gauging the degree of force involved in the exercise, 
     *  for example, heartbeats per minute. May include the velocity of the movement.</p>
     */
    public static final OntProperty intensity = m_model.createOntProperty( "http://schema.org/intensity" );
    
    /** <p>Another drug that is known to interact with this drug in a way that impacts 
     *  the effect of this drug or causes a risk to the patient. Note: disease interactions 
     *  are typically captured as contraindications.</p>
     */
    public static final OntProperty interactingDrug = m_model.createOntProperty( "http://schema.org/interactingDrug" );
    
    /** <p>A count of a specific user interactions with this item�for example, 20 UserLikes, 
     *  5 UserComments, or 300 UserDownloads. The user interaction type should be 
     *  one of the sub types of UserInteraction.</p>
     */
    public static final OntProperty interactionCount = m_model.createOntProperty( "http://schema.org/interactionCount" );
    
    /** <p>The predominant mode of learning supported by the learning resource. Acceptable 
     *  values are 'active', 'expositive', or 'mixed'.</p>
     */
    public static final OntProperty interactivityType = m_model.createOntProperty( "http://schema.org/interactivityType" );
    
    /** <p>The current approximate inventory level for the item or items.</p> */
    public static final OntProperty inventoryLevel = m_model.createOntProperty( "http://schema.org/inventoryLevel" );
    
    /** <p>A pointer to another product (or multiple products) for which this product 
     *  is an accessory or spare part.</p>
     */
    public static final OntProperty isAccessoryOrSparePartFor = m_model.createOntProperty( "http://schema.org/isAccessoryOrSparePartFor" );
    
    /** <p>True if the drug is available in a generic form (regardless of name).</p> */
    public static final OntProperty isAvailableGenerically = m_model.createOntProperty( "http://schema.org/isAvailableGenerically" );
    
    /** <p>A resource that was used in the creation of this resource. This term can be 
     *  repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html</p>
     */
    public static final OntProperty isBasedOnUrl = m_model.createOntProperty( "http://schema.org/isBasedOnUrl" );
    
    /** <p>A pointer to another product (or multiple products) for which this product 
     *  is a consumable.</p>
     */
    public static final OntProperty isConsumableFor = m_model.createOntProperty( "http://schema.org/isConsumableFor" );
    
    /** <p>Indicates whether this content is family friendly.</p> */
    public static final OntProperty isFamilyFriendly = m_model.createOntProperty( "http://schema.org/isFamilyFriendly" );
    
    /** <p>Was the offer accepted as a gift for someone other than the buyer.</p> */
    public static final OntProperty isGift = m_model.createOntProperty( "http://schema.org/isGift" );
    
    /** <p>Indicates the collection or gallery to which the item belongs.</p> */
    public static final OntProperty isPartOf = m_model.createOntProperty( "http://schema.org/isPartOf" );
    
    /** <p>True if this item's name is a proprietary/brand name (vs. generic name).</p> */
    public static final OntProperty isProprietary = m_model.createOntProperty( "http://schema.org/isProprietary" );
    
    /** <p>A pointer to another, somehow related product (or multiple products).</p> */
    public static final OntProperty isRelatedTo = m_model.createOntProperty( "http://schema.org/isRelatedTo" );
    
    /** <p>A pointer to another, functionally similar product (or multiple products).</p> */
    public static final OntProperty isSimilarTo = m_model.createOntProperty( "http://schema.org/isSimilarTo" );
    
    /** <p>A pointer to a base product from which this product is a variant. It is safe 
     *  to infer that the variant inherits all product features from the base model, 
     *  unless defined locally. This is not transitive.</p>
     */
    public static final OntProperty isVariantOf = m_model.createOntProperty( "http://schema.org/isVariantOf" );
    
    /** <p>The ISBN of the book.</p> */
    public static final OntProperty isbn = m_model.createOntProperty( "http://schema.org/isbn" );
    
    /** <p>The International Standard of Industrial Classification of All Economic Activities 
     *  (ISIC), Revision 4 code for a particular organization, business person, or 
     *  place.</p>
     */
    public static final OntProperty isicV4 = m_model.createOntProperty( "http://schema.org/isicV4" );
    
    /** <p>The organization issuing the permit.</p> */
    public static final OntProperty issuedBy = m_model.createOntProperty( "http://schema.org/issuedBy" );
    
    /** <p>The service through with the permit was granted.</p> */
    public static final OntProperty issuedThrough = m_model.createOntProperty( "http://schema.org/issuedThrough" );
    
    /** <p>A predefined value from OfferItemCondition or a textual description of the 
     *  condition of the product or service, or the products or services included 
     *  in the offer.</p>
     */
    public static final OntProperty itemCondition = m_model.createOntProperty( "http://schema.org/itemCondition" );
    
    /** <p>A single list item.</p> */
    public static final OntProperty itemListElement = m_model.createOntProperty( "http://schema.org/itemListElement" );
    
    /** <p>Type of ordering (e.home. Ascending, Descending, Unordered).</p> */
    public static final OntProperty itemListOrder = m_model.createOntProperty( "http://schema.org/itemListOrder" );
    
    /** <p>The item being offered.</p> */
    public static final OntProperty itemOffered = m_model.createOntProperty( "http://schema.org/itemOffered" );
    
    /** <p>The item that is being reviewed/rated.</p> */
    public static final OntProperty itemReviewed = m_model.createOntProperty( "http://schema.org/itemReviewed" );
    
    /** <p>Item(s) being shipped.</p> */
    public static final OntProperty itemShipped = m_model.createOntProperty( "http://schema.org/itemShipped" );
    
    /** <p>A (typically single) geographic location associated with the job position.</p> */
    public static final OntProperty jobLocation = m_model.createOntProperty( "http://schema.org/jobLocation" );
    
    /** <p>The job title of the person (for example, Financial Manager).</p> */
    public static final OntProperty jobTitle = m_model.createOntProperty( "http://schema.org/jobTitle" );
    
    /** <p>The keywords/tags used to describe this content.</p> */
    public static final OntProperty keywords = m_model.createOntProperty( "http://schema.org/keywords" );
    
    /** <p>The most generic bi-directional social/work relation.</p> */
    public static final OntProperty knows = m_model.createOntProperty( "http://schema.org/knows" );
    
    /** <p>Link to the drug's label details.</p> */
    public static final OntProperty labelDetails = m_model.createOntProperty( "http://schema.org/labelDetails" );
    
    /** <p>A sub property of participant. The owner of the real estate property. Sub 
     *  property of destination or participant?</p>
     */
    public static final OntProperty landlord = m_model.createOntProperty( "http://schema.org/landlord" );
    
    /** <p>A sub property of instrument. The languaged used on this action.</p> */
    public static final OntProperty language = m_model.createOntProperty( "http://schema.org/language" );
    
    /** <p>Date on which the content on this org.p4535992.mvc.webapp page was last reviewed for accuracy
     *  and/or completeness.</p>
     */
    public static final OntProperty lastReviewed = m_model.createOntProperty( "http://schema.org/lastReviewed" );
    
    /** <p>The latitude of a location. For example 37.42242.</p> */
    public static final OntProperty latitude = m_model.createOntProperty( "http://schema.org/latitude" );
    
    /** <p>The predominant type or kind characterizing the learning resource. For example, 
     *  'presentation', 'handout'.</p>
     */
    public static final OntProperty learningResourceType = m_model.createOntProperty( "http://schema.org/learningResourceType" );
    
    /** <p>The official name of the organization, e.home. the registered company name.</p> */
    public static final OntProperty legalName = m_model.createOntProperty( "http://schema.org/legalName" );
    
    /** <p>The drug or supplement's legal status, including any controlled substance 
     *  schedules that apply.</p>
     */
    public static final OntProperty legalStatus = m_model.createOntProperty( "http://schema.org/legalStatus" );
    
    /** <p>A sub property of participant. The person that lends the object being borrowed.</p> */
    public static final OntProperty lender = m_model.createOntProperty( "http://schema.org/lender" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  lesser than the object.</p>
     */
    public static final OntProperty lesser = m_model.createOntProperty( "http://schema.org/lesser" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  lesser than or equal to the object.</p>
     */
    public static final OntProperty lesserOrEqual = m_model.createOntProperty( "http://schema.org/lesserOrEqual" );
    
    /** <p>A line is a point-to-point path consisting of two or more points. A line is 
     *  expressed as a series of two or more point objects separated by space.</p>
     */
    public static final OntProperty line = m_model.createOntProperty( "http://schema.org/line" );
    
    /** <p>The location of the event, organization or action.</p> */
    public static final OntProperty location = m_model.createOntProperty( "http://schema.org/location" );
    
    /** <p>A logo associated with an organization.</p> */
    public static final OntProperty logo = m_model.createOntProperty( "http://schema.org/logo" );
    
    /** <p>The longitude of a location. For example -122.08585.</p> */
    public static final OntProperty longitude = m_model.createOntProperty( "http://schema.org/longitude" );
    
    /** <p>A sub property of participant. The loser of the action.</p> */
    public static final OntProperty loser = m_model.createOntProperty( "http://schema.org/loser" );
    
    /** <p>The lowest price of all offers available.</p> */
    public static final OntProperty lowPrice = m_model.createOntProperty( "http://schema.org/lowPrice" );
    
    /** <p>Indicates if this org.p4535992.mvc.webapp page element is the main subject of the page.</p> */
    public static final OntProperty mainContentOfPage = m_model.createOntProperty( "http://schema.org/mainContentOfPage" );
    
    /** <p>A pointer to products or services offered by the organization or person.</p> */
    public static final OntProperty makesOffer = m_model.createOntProperty( "http://schema.org/makesOffer" );
    
    /** <p>The manufacturer of the product.</p> */
    public static final OntProperty manufacturer = m_model.createOntProperty( "http://schema.org/manufacturer" );
    
    /** <p>A URL to a map of the place.</p> */
    public static final OntProperty map = m_model.createOntProperty( "http://schema.org/map" );
    
    /** <p>A URL to a map of the place (legacy spelling; see singular form, map).</p> */
    public static final OntProperty maps = m_model.createOntProperty( "http://schema.org/maps" );
    
    /** <p>The highest price if the price is a range.</p> */
    public static final OntProperty maxPrice = m_model.createOntProperty( "http://schema.org/maxPrice" );
    
    /** <p>The upper of the product characteristic.</p> */
    public static final OntProperty maxValue = m_model.createOntProperty( "http://schema.org/maxValue" );
    
    /** <p>Recommended intake of this supplement for a given population as defined by 
     *  a specific recommending authority.</p>
     */
    public static final OntProperty maximumIntake = m_model.createOntProperty( "http://schema.org/maximumIntake" );
    
    /** <p>The specific biochemical interaction through which this drug or supplement 
     *  produces its pharmacological effect.</p>
     */
    public static final OntProperty mechanismOfAction = m_model.createOntProperty( "http://schema.org/mechanismOfAction" );
    
    /** <p>A medical specialty of the provider.</p> */
    public static final OntProperty medicalSpecialty = m_model.createOntProperty( "http://schema.org/medicalSpecialty" );
    
    /** <p>The system of medicine that includes this MedicalEntity, for example 'evidence-based', 
     *  'homeopathic', 'chiropractic', etc.</p>
     */
    public static final OntProperty medicineSystem = m_model.createOntProperty( "http://schema.org/medicineSystem" );
    
    /** <p>A member of this organization.</p> */
    public static final OntProperty member = m_model.createOntProperty( "http://schema.org/member" );
    
    /** <p>An organization to which the person belongs.</p> */
    public static final OntProperty memberOf = m_model.createOntProperty( "http://schema.org/memberOf" );
    
    /** <p>A member of this organization (legacy spelling; see singular form, member).</p> */
    public static final OntProperty members = m_model.createOntProperty( "http://schema.org/members" );
    
    /** <p>Minimum memory requirements.</p> */
    public static final OntProperty memoryRequirements = m_model.createOntProperty( "http://schema.org/memoryRequirements" );
    
    /** <p>Indicates that the CreativeWork contains a reference to, but is not necessarily 
     *  about a concept.</p>
     */
    public static final OntProperty mentions = m_model.createOntProperty( "http://schema.org/mentions" );
    
    /** <p>Either the actual menu or a URL of the menu.</p> */
    public static final OntProperty menu = m_model.createOntProperty( "http://schema.org/menu" );
    
    /** <p>The party taking the order (e.home. Amazon.com is a merchant for many sellers).</p> */
    public static final OntProperty merchant = m_model.createOntProperty( "http://schema.org/merchant" );
    
    /** <p>The lowest price if the price is a range.</p> */
    public static final OntProperty minPrice = m_model.createOntProperty( "http://schema.org/minPrice" );
    
    /** <p>The lower value of the product characteristic.</p> */
    public static final OntProperty minValue = m_model.createOntProperty( "http://schema.org/minValue" );
    
    /** <p>The model of the product. Use with the URL of a ProductModel or a textual 
     *  representation of the model identifier. The URL of the ProductModel can be 
     *  from an external source. It is recommended to additionally provide strong 
     *  product identifiers via the gtin8/gtin13/gtin14 and mpn properties.</p>
     */
    public static final OntProperty model = m_model.createOntProperty( "http://schema.org/model" );
    
    /** <p>The Manufacturer Part Number (MPN) of the product, or the product to which 
     *  the offer refers.</p>
     */
    public static final OntProperty mpn = m_model.createOntProperty( "http://schema.org/mpn" );
    
    /** <p>The composer of the movie or TV/radio soundtrack.</p> */
    public static final OntProperty musicBy = m_model.createOntProperty( "http://schema.org/musicBy" );
    
    /** <p>A member of the music group�for example, John, Paul, George, or Ringo.</p> */
    public static final OntProperty musicGroupMember = m_model.createOntProperty( "http://schema.org/musicGroupMember" );
    
    /** <p>The North American Industry Classification System (NAICS) code for a particular 
     *  organization or business person.</p>
     */
    public static final OntProperty naics = m_model.createOntProperty( "http://schema.org/naics" );
    
    /** <p>The name of the item.</p> */
    public static final OntProperty name = m_model.createOntProperty( "http://schema.org/name" );
    
    /** <p>Nationality of the person.</p> */
    public static final OntProperty nationality = m_model.createOntProperty( "http://schema.org/nationality" );
    
    /** <p>The expected progression of the condition if it is not treated and allowed 
     *  to progress naturally.</p>
     */
    public static final OntProperty naturalProgression = m_model.createOntProperty( "http://schema.org/naturalProgression" );
    
    /** <p>The underlying innervation associated with the muscle.</p> */
    public static final OntProperty nerve = m_model.createOntProperty( "http://schema.org/nerve" );
    
    /** <p>The neurological pathway extension that involves muscle control.</p> */
    public static final OntProperty nerveMotor = m_model.createOntProperty( "http://schema.org/nerveMotor" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  not equal to the object.</p>
     */
    public static final OntProperty nonEqual = m_model.createOntProperty( "http://schema.org/nonEqual" );
    
    /** <p>The generic name of this drug or supplement.</p> */
    public static final OntProperty nonProprietaryName = m_model.createOntProperty( "http://schema.org/nonProprietaryName" );
    
    /** <p>Range of acceptable values for a typical patient, when applicable.</p> */
    public static final OntProperty normalRange = m_model.createOntProperty( "http://schema.org/normalRange" );
    
    /** <p>The number of tracks in this album or playlist.</p> */
    public static final OntProperty numTracks = m_model.createOntProperty( "http://schema.org/numTracks" );
    
    /** <p>The number of episodes in this season or series.</p> */
    public static final OntProperty numberOfEpisodes = m_model.createOntProperty( "http://schema.org/numberOfEpisodes" );
    
    /** <p>The number of pages in the book.</p> */
    public static final OntProperty numberOfPages = m_model.createOntProperty( "http://schema.org/numberOfPages" );
    
    /** <p>The number of seasons in this series.</p> */
    public static final OntProperty numberOfSeasons = m_model.createOntProperty( "http://schema.org/numberOfSeasons" );
    
    /** <p>The size of business by number of employees.</p> */
    public static final OntProperty numberofEmployees = m_model.createOntProperty( "http://schema.org/numberofEmployees" );
    
    /** <p>Nutrition information about the recipe.</p> */
    public static final OntProperty nutrition = m_model.createOntProperty( "http://schema.org/nutrition" );
    
    /** <p>The object upon the action is carried out, whose state is kept intact or changed. 
     *  Also known as the semantic roles patient, affected or undergoer (which change 
     *  their state) or theme (which doesn't). e.home. John read *a book*.</p>
     */
    public static final OntProperty object = m_model.createOntProperty( "http://schema.org/object" );
    
    /** <p>Category or categories describing the job. Use BLS O*NET-SOC taxonomy: http://www.onetcenter.org/taxonomy.html. 
     *  Ideally includes textual label and formal code, with the property repeated 
     *  for each applicable value.</p>
     */
    public static final OntProperty occupationalCategory = m_model.createOntProperty( "http://schema.org/occupationalCategory" );
    
    /** <p>The number of offers for the product.</p> */
    public static final OntProperty offerCount = m_model.createOntProperty( "http://schema.org/offerCount" );
    
    /** <p>An offer to transfer some rights to an item or to provide a service�for example, 
     *  an offer to sell tickets to an event, to rent the DVD of a movie, to stream 
     *  a TV show over the internet, to repair a motorcycle, or to loan a book.</p>
     */
    public static final OntProperty offers = m_model.createOntProperty( "http://schema.org/offers" );
    
    /** <p>The opening hours for a business. Opening hours can be specified as a weekly 
     *  time range, starting with days, then times per day. Multiple days can be listed 
     *  with commas ',' separating each day. Day or time ranges are specified using 
     *  a hyphen '-'.- Days are specified using the following two-letter combinations: 
     *  Mo, Tu, We, Th, Fr, Sa, Su.- Times are specified using 24:00 time. For example, 
     *  3pm is specified as 15:00. - Here is an example: &lt;time itemprop="openingHours" 
     *  datetime="Tu,Th 16:00-20:00"&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;. 
     *  - If a business is open 7 days a week, then it can be specified as &lt;time 
     *  itemprop="openingHours" datetime="Mo-Su"&gt;Monday through Sunday, all day&lt;/time&gt;.</p>
     */
    public static final OntProperty openingHours = m_model.createOntProperty( "http://schema.org/openingHours" );
    
    /** <p>The opening hours of a certain place.</p> */
    public static final OntProperty openingHoursSpecification = m_model.createOntProperty( "http://schema.org/openingHoursSpecification" );
    
    /** <p>The opening hour of the place or service on the given day(s) of the week.</p> */
    public static final OntProperty opens = m_model.createOntProperty( "http://schema.org/opens" );
    
    /** <p>Operating systems supported (Windows 7, OSX 10.6, Android 1.6).</p> */
    public static final OntProperty operatingSystem = m_model.createOntProperty( "http://schema.org/operatingSystem" );
    
    /** <p>A sub property of participant. The oponent on this action.</p> */
    public static final OntProperty oponent = m_model.createOntProperty( "http://schema.org/oponent" );
    
    /** <p>A sub property of object. The options subject to this action.</p> */
    public static final OntProperty option = m_model.createOntProperty( "http://schema.org/option" );
    
    /** <p>Date order was placed.</p> */
    public static final OntProperty orderDate = m_model.createOntProperty( "http://schema.org/orderDate" );
    
    /** <p>The identifier of the transaction.</p> */
    public static final OntProperty orderNumber = m_model.createOntProperty( "http://schema.org/orderNumber" );
    
    /** <p>The current status of the order.</p> */
    public static final OntProperty orderStatus = m_model.createOntProperty( "http://schema.org/orderStatus" );
    
    /** <p>The item ordered.</p> */
    public static final OntProperty orderedItem = m_model.createOntProperty( "http://schema.org/orderedItem" );
    
    /** <p>The place or point where a muscle arises.</p> */
    public static final OntProperty origin = m_model.createOntProperty( "http://schema.org/origin" );
    
    /** <p>Shipper's address.</p> */
    public static final OntProperty originAddress = m_model.createOntProperty( "http://schema.org/originAddress" );
    
    /** <p>The vasculature the lymphatic structure originates, or afferents, from.</p> */
    public static final OntProperty originatesFrom = m_model.createOntProperty( "http://schema.org/originatesFrom" );
    
    /** <p>Expected or actual outcomes of the study.</p> */
    public static final OntProperty outcome = m_model.createOntProperty( "http://schema.org/outcome" );
    
    /** <p>Any information related to overdose on a drug, including signs or symptoms, 
     *  treatments, contact information for emergency response.</p>
     */
    public static final OntProperty overdosage = m_model.createOntProperty( "http://schema.org/overdosage" );
    
    /** <p>Descriptive information establishing the overarching theory/philosophy of 
     *  the plan. May include the rationale for the name, the population where the 
     *  plan first came to prominence, etc.</p>
     */
    public static final OntProperty overview = m_model.createOntProperty( "http://schema.org/overview" );
    
    /** <p>The date and time of obtaining the product.</p> */
    public static final OntProperty ownedFrom = m_model.createOntProperty( "http://schema.org/ownedFrom" );
    
    /** <p>The date and time of giving up ownership on the product.</p> */
    public static final OntProperty ownedThrough = m_model.createOntProperty( "http://schema.org/ownedThrough" );
    
    /** <p>Products owned by the organization or person.</p> */
    public static final OntProperty owns = m_model.createOntProperty( "http://schema.org/owns" );
    
    /** <p>A parent of this person.</p> */
    public static final OntProperty parent = m_model.createOntProperty( "http://schema.org/parent" );
    
    /** <p>A broadcast service to which the broadcast service may belong to such as regional 
     *  variations of a national channel.</p>
     */
    public static final OntProperty parentService = m_model.createOntProperty( "http://schema.org/parentService" );
    
    /** <p>A parents of the person (legacy spelling; see singular form, parent).</p> */
    public static final OntProperty parents = m_model.createOntProperty( "http://schema.org/parents" );
    
    /** <p>The episode to which this clip belongs.</p> */
    public static final OntProperty partOfEpisode = m_model.createOntProperty( "http://schema.org/partOfEpisode" );
    
    /** <p>The overall order the items in this delivery were included in.</p> */
    public static final OntProperty partOfOrder = m_model.createOntProperty( "http://schema.org/partOfOrder" );
    
    /** <p>The season to which this episode belongs.</p> */
    public static final OntProperty partOfSeason = m_model.createOntProperty( "http://schema.org/partOfSeason" );
    
    /** <p>The series to which this episode or season belongs.</p> */
    public static final OntProperty partOfSeries = m_model.createOntProperty( "http://schema.org/partOfSeries" );
    
    /** <p>The anatomical or organ system that this structure is part of.</p> */
    public static final OntProperty partOfSystem = m_model.createOntProperty( "http://schema.org/partOfSystem" );
    
    /** <p>The TV series to which this episode or season belongs. (legacy form; partOfSeries 
     *  is preferred)</p>
     */
    public static final OntProperty partOfTVSeries = m_model.createOntProperty( "http://schema.org/partOfTVSeries" );
    
    /** <p>Other co-agents that participated in the action indirectly. e.home. John wrote
     *  a book with *Steve*.</p>
     */
    public static final OntProperty participant = m_model.createOntProperty( "http://schema.org/participant" );
    
    /** <p>Changes in the normal mechanical, physical, and biochemical functions that 
     *  are associated with this activity or condition.</p>
     */
    public static final OntProperty pathophysiology = m_model.createOntProperty( "http://schema.org/pathophysiology" );
    
    /** <p>Cash, credit card, etc.</p> */
    public static final OntProperty paymentAccepted = m_model.createOntProperty( "http://schema.org/paymentAccepted" );
    
    /** <p>The date that payment is due.</p> */
    public static final OntProperty paymentDue = m_model.createOntProperty( "http://schema.org/paymentDue" );
    
    /** <p>The name of the credit card or other method of payment for the order.</p> */
    public static final OntProperty paymentMethod = m_model.createOntProperty( "http://schema.org/paymentMethod" );
    
    /** <p>An identifier for the method of payment used (e.home. the last 4 digits of the
     *  credit card).</p>
     */
    public static final OntProperty paymentMethodId = m_model.createOntProperty( "http://schema.org/paymentMethodId" );
    
    /** <p>The URL for sending a payment.</p> */
    public static final OntProperty paymentUrl = m_model.createOntProperty( "http://schema.org/paymentUrl" );
    
    /** <p>A performer at the event�for example, a presenter, musician, musical group 
     *  or actor.</p>
     */
    public static final OntProperty performer = m_model.createOntProperty( "http://schema.org/performer" );
    
    /** <p>Event that this person is a performer or participant in.</p> */
    public static final OntProperty performerIn = m_model.createOntProperty( "http://schema.org/performerIn" );
    
    /** <p>The main performer or performers of the event�for example, a presenter, musician, 
     *  or actor (legacy spelling; see singular form, performer).</p>
     */
    public static final OntProperty performers = m_model.createOntProperty( "http://schema.org/performers" );
    
    /** <p>Permission(s) required to run the app (for example, a mobile app may require 
     *  full internet access or may run only on wifi).</p>
     */
    public static final OntProperty permissions = m_model.createOntProperty( "http://schema.org/permissions" );
    
    /** <p>The target audience for this permit.</p> */
    public static final OntProperty permitAudience = m_model.createOntProperty( "http://schema.org/permitAudience" );
    
    /** <p>The phase of the trial.</p> */
    public static final OntProperty phase = m_model.createOntProperty( "http://schema.org/phase" );
    
    /** <p>A photograph of this place.</p> */
    public static final OntProperty photo = m_model.createOntProperty( "http://schema.org/photo" );
    
    /** <p>Photographs of this place (legacy spelling; see singular form, photo).</p> */
    public static final OntProperty photos = m_model.createOntProperty( "http://schema.org/photos" );
    
    /** <p>Specific physiologic benefits associated to the plan.</p> */
    public static final OntProperty physiologicalBenefits = m_model.createOntProperty( "http://schema.org/physiologicalBenefits" );
    
    /** <p>Player type required�for example, Flash or Silverlight.</p> */
    public static final OntProperty playerType = m_model.createOntProperty( "http://schema.org/playerType" );
    
    /** <p>A polygon is the area enclosed by a point-to-point path for which the starting 
     *  and ending points are the same. A polygon is expressed as a series of four 
     *  or more spacedelimited points where the first and final points are identical.</p>
     */
    public static final OntProperty polygon = m_model.createOntProperty( "http://schema.org/polygon" );
    
    /** <p>Any characteristics of the population used in the study, e.home. 'males under
     *  65'.</p>
     */
    public static final OntProperty population = m_model.createOntProperty( "http://schema.org/population" );
    
    /** <p>Free text to define other than pure numerical ranking of an episode or a season 
     *  in an ordered list of items (further formatting restrictions may apply within 
     *  particular user groups).</p>
     */
    public static final OntProperty position = m_model.createOntProperty( "http://schema.org/position" );
    
    /** <p>A possible unexpected and unfavorable evolution of a medical condition. Complications 
     *  may include worsening of the signs or symptoms of the disease, extension of 
     *  the condition to other organ systems, etc.</p>
     */
    public static final OntProperty possibleComplication = m_model.createOntProperty( "http://schema.org/possibleComplication" );
    
    /** <p>A possible treatment to address this condition, sign or symptom.</p> */
    public static final OntProperty possibleTreatment = m_model.createOntProperty( "http://schema.org/possibleTreatment" );
    
    /** <p>The post offce box number for PO box addresses.</p> */
    public static final OntProperty postOfficeBoxNumber = m_model.createOntProperty( "http://schema.org/postOfficeBoxNumber" );
    
    /** <p>A description of the postoperative procedures, care, and/or followups for 
     *  this device.</p>
     */
    public static final OntProperty postOp = m_model.createOntProperty( "http://schema.org/postOp" );
    
    /** <p>The postal code. For example, 94043.</p> */
    public static final OntProperty postalCode = m_model.createOntProperty( "http://schema.org/postalCode" );
    
    /** <p>A description of the workup, testing, and other preparations required before 
     *  implanting this device.</p>
     */
    public static final OntProperty preOp = m_model.createOntProperty( "http://schema.org/preOp" );
    
    /** <p>A pointer from a previous, often discontinued variant of the product to its 
     *  newer variant.</p>
     */
    public static final OntProperty predecessorOf = m_model.createOntProperty( "http://schema.org/predecessorOf" );
    
    /** <p>Pregnancy category of this drug.</p> */
    public static final OntProperty pregnancyCategory = m_model.createOntProperty( "http://schema.org/pregnancyCategory" );
    
    /** <p>Any precaution, guidance, contraindication, etc. related to this drug's use 
     *  during pregnancy.</p>
     */
    public static final OntProperty pregnancyWarning = m_model.createOntProperty( "http://schema.org/pregnancyWarning" );
    
    /** <p>The length of time it takes to prepare the recipe, in ISO 8601 duration format.</p> */
    public static final OntProperty prepTime = m_model.createOntProperty( "http://schema.org/prepTime" );
    
    /** <p>Typical preparation that a patient must undergo before having the procedure 
     *  performed.</p>
     */
    public static final OntProperty preparation = m_model.createOntProperty( "http://schema.org/preparation" );
    
    /** <p>Link to prescribing information for the drug.</p> */
    public static final OntProperty prescribingInfo = m_model.createOntProperty( "http://schema.org/prescribingInfo" );
    
    /** <p>Indicates whether this drug is available by prescription or over-the-counter.</p> */
    public static final OntProperty prescriptionStatus = m_model.createOntProperty( "http://schema.org/prescriptionStatus" );
    
    /** <p>Used in conjunction with eventStatus for rescheduled or cancelled events. 
     *  This property contains the previously scheduled start date. For rescheduled 
     *  events, the startDate property should be used for the newly scheduled start 
     *  date. In the (rare) case of an event that has been postponed and rescheduled 
     *  multiple times, this field may be repeated.</p>
     */
    public static final OntProperty previousStartDate = m_model.createOntProperty( "http://schema.org/previousStartDate" );
    
    /** <p>The offer price of a product, or of a price component when attached to PriceSpecification 
     *  and its subtypes.</p>
     */
    public static final OntProperty price = m_model.createOntProperty( "http://schema.org/price" );
    
    /** <p>The currency (in 3-letter ISO 4217 format) of the offer price or a price component, 
     *  when attached to PriceSpecification and its subtypes.</p>
     */
    public static final OntProperty priceCurrency = m_model.createOntProperty( "http://schema.org/priceCurrency" );
    
    /** <p>The price range of the business, for example $$$.</p> */
    public static final OntProperty priceRange = m_model.createOntProperty( "http://schema.org/priceRange" );
    
    /** <p>One or more detailed price specifications, indicating the unit price and delivery 
     *  or payment charges.</p>
     */
    public static final OntProperty priceSpecification = m_model.createOntProperty( "http://schema.org/priceSpecification" );
    
    /** <p>A short text or acronym indicating multiple price specifications for the same 
     *  offer, e.home. SRP for the suggested retail price or INVOICE for the invoice
     *  price, mostly used in the car industry.</p>
     */
    public static final OntProperty priceType = m_model.createOntProperty( "http://schema.org/priceType" );
    
    /** <p>The date after which the price is no longer available.</p> */
    public static final OntProperty priceValidUntil = m_model.createOntProperty( "http://schema.org/priceValidUntil" );
    
    /** <p>Indicates the main image on the page</p> */
    public static final OntProperty primaryImageOfPage = m_model.createOntProperty( "http://schema.org/primaryImageOfPage" );
    
    /** <p>A preventative therapy used to prevent an initial occurrence of the medical 
     *  condition, such as vaccination.</p>
     */
    public static final OntProperty primaryPrevention = m_model.createOntProperty( "http://schema.org/primaryPrevention" );
    
    /** <p>The number of the column in which the NewsArticle appears in the print edition.</p> */
    public static final OntProperty printColumn = m_model.createOntProperty( "http://schema.org/printColumn" );
    
    /** <p>The edition of the print product in which the NewsArticle appears.</p> */
    public static final OntProperty printEdition = m_model.createOntProperty( "http://schema.org/printEdition" );
    
    /** <p>If this NewsArticle appears in print, this field indicates the name of the 
     *  page on which the article is found. Please note that this field is intended 
     *  for the exact page name (e.home. A5, B18).</p>
     */
    public static final OntProperty printPage = m_model.createOntProperty( "http://schema.org/printPage" );
    
    /** <p>If this NewsArticle appears in print, this field indicates the print section 
     *  in which the article appeared.</p>
     */
    public static final OntProperty printSection = m_model.createOntProperty( "http://schema.org/printSection" );
    
    /** <p>A description of the procedure involved in setting up, using, and/or installing 
     *  the device.</p>
     */
    public static final OntProperty procedure = m_model.createOntProperty( "http://schema.org/procedure" );
    
    /** <p>The type of procedure, for example Surgical, Noninvasive, or Percutaneous.</p> */
    public static final OntProperty procedureType = m_model.createOntProperty( "http://schema.org/procedureType" );
    
    /** <p>Estimated processing time for the service using this channel.</p> */
    public static final OntProperty processingTime = m_model.createOntProperty( "http://schema.org/processingTime" );
    
    /** <p>Processor architecture required to run the application (e.home. IA64).</p> */
    public static final OntProperty processorRequirements = m_model.createOntProperty( "http://schema.org/processorRequirements" );
    
    /** <p>The producer of the movie, tv/radio series, season, or episode, or video.</p> */
    public static final OntProperty producer = m_model.createOntProperty( "http://schema.org/producer" );
    
    /** <p>The tangible thing generated by the service, e.home. a passport, permit, etc.</p> */
    public static final OntProperty produces = m_model.createOntProperty( "http://schema.org/produces" );
    
    /** <p>The product identifier, such as ISBN. For example: &lt;meta itemprop='productID' 
     *  content='isbn:123-456-789'/&gt;.</p>
     */
    public static final OntProperty productID = m_model.createOntProperty( "http://schema.org/productID" );
    
    /** <p>The product or service this support contact point is related to (such as product 
     *  support for a particular product line). This can be a specific product or 
     *  product line (e.home. "iPhone") or a general category of products or services
     *  (e.home. "smartphones").</p>
     */
    public static final OntProperty productSupported = m_model.createOntProperty( "http://schema.org/productSupported" );
    
    /** <p>The production company or studio that made the movie, tv/radio series, season, 
     *  or episode, or media object.</p>
     */
    public static final OntProperty productionCompany = m_model.createOntProperty( "http://schema.org/productionCompany" );
    
    /** <p>Proficiency needed for this content; expected values: 'Beginner', 'Expert'.</p> */
    public static final OntProperty proficiencyLevel = m_model.createOntProperty( "http://schema.org/proficiencyLevel" );
    
    /** <p>The computer programming language.</p> */
    public static final OntProperty programmingLanguage = m_model.createOntProperty( "http://schema.org/programmingLanguage" );
    
    /** <p>Indicates whether API is managed or unmanaged.</p> */
    public static final OntProperty programmingModel = m_model.createOntProperty( "http://schema.org/programmingModel" );
    
    /** <p>Proprietary name given to the diet plan, typically by its originator or creator.</p> */
    public static final OntProperty proprietaryName = m_model.createOntProperty( "http://schema.org/proprietaryName" );
    
    /** <p>The number of grams of protein.</p> */
    public static final OntProperty proteinContent = m_model.createOntProperty( "http://schema.org/proteinContent" );
    
    /** <p>The organization or agency that is providing the service.</p> */
    public static final OntProperty provider = m_model.createOntProperty( "http://schema.org/provider" );
    
    /** <p>The service provided by this channel.</p> */
    public static final OntProperty providesService = m_model.createOntProperty( "http://schema.org/providesService" );
    
    /** <p>A publication event associated with the episode, clip or media object.</p> */
    public static final OntProperty publication = m_model.createOntProperty( "http://schema.org/publication" );
    
    /** <p>The type of the medical article, taken from the US NLM MeSH publication type 
     *  catalog.</p>
     */
    public static final OntProperty publicationType = m_model.createOntProperty( "http://schema.org/publicationType" );
    
    /** <p>A broadcast service associated with the publication event</p> */
    public static final OntProperty publishedOn = m_model.createOntProperty( "http://schema.org/publishedOn" );
    
    /** <p>The publisher of the creative work.</p> */
    public static final OntProperty publisher = m_model.createOntProperty( "http://schema.org/publisher" );
    
    /** <p>Link to page describing the editorial principles of the organization primarily 
     *  responsible for the creation of the CreativeWork.</p>
     */
    public static final OntProperty publishingPrinciples = m_model.createOntProperty( "http://schema.org/publishingPrinciples" );
    
    /** <p>A goal towards an action is taken. Can be concrete or abstract.</p> */
    public static final OntProperty purpose = m_model.createOntProperty( "http://schema.org/purpose" );
    
    /** <p>Specific qualifications required for this role.</p> */
    public static final OntProperty qualifications = m_model.createOntProperty( "http://schema.org/qualifications" );
    
    /** <p>A sub property of instrument. The query used on this action.</p> */
    public static final OntProperty query = m_model.createOntProperty( "http://schema.org/query" );
    
    /** <p>A sub property of object. A question.</p> */
    public static final OntProperty question = m_model.createOntProperty( "http://schema.org/question" );
    
    /** <p>Relates a property to a class that constitutes (one of) the expected type(s) 
     *  for values of the property.</p>
     */
    public static final OntProperty rangeIncludes = m_model.createOntProperty( "http://schema.org/rangeIncludes" );
    
    /** <p>The count of total number of ratings.</p> */
    public static final OntProperty ratingCount = m_model.createOntProperty( "http://schema.org/ratingCount" );
    
    /** <p>The rating for the content.</p> */
    public static final OntProperty ratingValue = m_model.createOntProperty( "http://schema.org/ratingValue" );
    
    /** <p>A sub property of participant. The real estate agent involved in the action.</p> */
    public static final OntProperty realEstateAgent = m_model.createOntProperty( "http://schema.org/realEstateAgent" );
    
    /** <p>A sub property of instrument. The recipe/instructions used to perform the 
     *  action.</p>
     */
    public static final OntProperty recipe = m_model.createOntProperty( "http://schema.org/recipe" );
    
    /** <p>The category of the recipe�for example, appetizer, entree, etc.</p> */
    public static final OntProperty recipeCategory = m_model.createOntProperty( "http://schema.org/recipeCategory" );
    
    /** <p>The cuisine of the recipe (for example, French or Ethopian).</p> */
    public static final OntProperty recipeCuisine = m_model.createOntProperty( "http://schema.org/recipeCuisine" );
    
    /** <p>The steps to make the dish.</p> */
    public static final OntProperty recipeInstructions = m_model.createOntProperty( "http://schema.org/recipeInstructions" );
    
    /** <p>The quantity produced by the recipe (for example, number of people served, 
     *  number of servings, etc).</p>
     */
    public static final OntProperty recipeYield = m_model.createOntProperty( "http://schema.org/recipeYield" );
    
    /** <p>A sub property of participant. The participant who is at the receiving end 
     *  of the action.</p>
     */
    public static final OntProperty recipient = m_model.createOntProperty( "http://schema.org/recipient" );
    
    /** <p>If applicable, the organization that officially recognizes this entity as 
     *  part of its endorsed system of medicine.</p>
     */
    public static final OntProperty recognizingAuthority = m_model.createOntProperty( "http://schema.org/recognizingAuthority" );
    
    /** <p>Strength of the guideline's recommendation (e.home. 'class I').</p> */
    public static final OntProperty recommendationStrength = m_model.createOntProperty( "http://schema.org/recommendationStrength" );
    
    /** <p>Recommended intake of this supplement for a given population as defined by 
     *  a specific recommending authority.</p>
     */
    public static final OntProperty recommendedIntake = m_model.createOntProperty( "http://schema.org/recommendedIntake" );
    
    /** <p>The anatomical or organ system drained by this vessel; generally refers to 
     *  a specific part of an organ.</p>
     */
    public static final OntProperty regionDrained = m_model.createOntProperty( "http://schema.org/regionDrained" );
    
    /** <p>The regions where the media is allowed. If not specified, then it's assumed 
     *  to be allowed everywhere. Specify the countries in ISO 3166 format.</p>
     */
    public static final OntProperty regionsAllowed = m_model.createOntProperty( "http://schema.org/regionsAllowed" );
    
    /** <p>Anatomical systems or structures that relate to the superficial anatomy.</p> */
    public static final OntProperty relatedAnatomy = m_model.createOntProperty( "http://schema.org/relatedAnatomy" );
    
    /** <p>A medical condition associated with this anatomy.</p> */
    public static final OntProperty relatedCondition = m_model.createOntProperty( "http://schema.org/relatedCondition" );
    
    /** <p>Any other drug related to this one, for example commonly-prescribed alternatives.</p> */
    public static final OntProperty relatedDrug = m_model.createOntProperty( "http://schema.org/relatedDrug" );
    
    /** <p>A link related to this org.p4535992.mvc.webapp page, for example to other related org.p4535992.mvc.webapp pages.</p> */
    public static final OntProperty relatedLink = m_model.createOntProperty( "http://schema.org/relatedLink" );
    
    /** <p>Related anatomical structure(s) that are not part of the system but relate 
     *  or connect to it, such as vascular bundles associated with an organ system.</p>
     */
    public static final OntProperty relatedStructure = m_model.createOntProperty( "http://schema.org/relatedStructure" );
    
    /** <p>A medical therapy related to this anatomy.</p> */
    public static final OntProperty relatedTherapy = m_model.createOntProperty( "http://schema.org/relatedTherapy" );
    
    /** <p>The most generic familial relation.</p> */
    public static final OntProperty relatedTo = m_model.createOntProperty( "http://schema.org/relatedTo" );
    
    /** <p>The release date of a product or product model. This can be used to distinguish 
     *  the exact variant of a product.</p>
     */
    public static final OntProperty releaseDate = m_model.createOntProperty( "http://schema.org/releaseDate" );
    
    /** <p>Description of what changed in this version.</p> */
    public static final OntProperty releaseNotes = m_model.createOntProperty( "http://schema.org/releaseNotes" );
    
    /** <p>If applicable, a medical specialty in which this entity is relevant.</p> */
    public static final OntProperty relevantSpecialty = m_model.createOntProperty( "http://schema.org/relevantSpecialty" );
    
    /** <p>Number of times one should repeat the activity.</p> */
    public static final OntProperty repetitions = m_model.createOntProperty( "http://schema.org/repetitions" );
    
    /** <p>A sub property of object. The object that is being replaced.</p> */
    public static final OntProperty replacee = m_model.createOntProperty( "http://schema.org/replacee" );
    
    /** <p>A sub property of object. The object that replaces.</p> */
    public static final OntProperty replacer = m_model.createOntProperty( "http://schema.org/replacer" );
    
    /** <p>The URL at which a reply may be posted to the specified UserComment.</p> */
    public static final OntProperty replyToUrl = m_model.createOntProperty( "http://schema.org/replyToUrl" );
    
    /** <p>Indicates whether this image is representative of the content of the page.</p> */
    public static final OntProperty representativeOfPage = m_model.createOntProperty( "http://schema.org/representativeOfPage" );
    
    /** <p>Audiences defined by a person's gender.</p> */
    public static final OntProperty requiredGender = m_model.createOntProperty( "http://schema.org/requiredGender" );
    
    /** <p>Audiences defined by a person's maximum age.</p> */
    public static final OntProperty requiredMaxAge = m_model.createOntProperty( "http://schema.org/requiredMaxAge" );
    
    /** <p>Audiences defined by a person's minimum age.</p> */
    public static final OntProperty requiredMinAge = m_model.createOntProperty( "http://schema.org/requiredMinAge" );
    
    /** <p>Component dependency requirements for application. This includes runtime environments 
     *  and shared libraries that are not included in the application distribution 
     *  package, but required to run the application (Examples: DirectX, Java or .NET 
     *  runtime).</p>
     */
    public static final OntProperty requirements = m_model.createOntProperty( "http://schema.org/requirements" );
    
    /** <p>Indicates if use of the media require a subscription (either paid or free). 
     *  Allowed values are true or false (note that an earlier version had 'yes', 
     *  'no').</p>
     */
    public static final OntProperty requiresSubscription = m_model.createOntProperty( "http://schema.org/requiresSubscription" );
    
    /** <p>Responsibilities associated with this role.</p> */
    public static final OntProperty responsibilities = m_model.createOntProperty( "http://schema.org/responsibilities" );
    
    /** <p>How often one should break from the activity.</p> */
    public static final OntProperty restPeriods = m_model.createOntProperty( "http://schema.org/restPeriods" );
    
    /** <p>The result produced in the action. e.home. John wrote *a book*.</p> */
    public static final OntProperty result = m_model.createOntProperty( "http://schema.org/result" );
    
    /** <p>A sub property of result. The review that resulted in the performing of the 
     *  action.</p>
     */
    public static final OntProperty resultReview = m_model.createOntProperty( "http://schema.org/resultReview" );
    
    /** <p>A review of the item.</p> */
    public static final OntProperty review = m_model.createOntProperty( "http://schema.org/review" );
    
    /** <p>The actual body of the review</p> */
    public static final OntProperty reviewBody = m_model.createOntProperty( "http://schema.org/reviewBody" );
    
    /** <p>The count of total number of reviews.</p> */
    public static final OntProperty reviewCount = m_model.createOntProperty( "http://schema.org/reviewCount" );
    
    /** <p>The rating given in this review. Note that reviews can themselves be rated. 
     *  The reviewRating applies to rating given by the review. The aggregateRating 
     *  property applies to the review itself, as a creative work.</p>
     */
    public static final OntProperty reviewRating = m_model.createOntProperty( "http://schema.org/reviewRating" );
    
    /** <p>People or organizations that have reviewed the content on this org.p4535992.mvc.webapp page for
     *  accuracy and/or completeness.</p>
     */
    public static final OntProperty reviewedBy = m_model.createOntProperty( "http://schema.org/reviewedBy" );
    
    /** <p>Review of the item (legacy spelling; see singular form, review).</p> */
    public static final OntProperty reviews = m_model.createOntProperty( "http://schema.org/reviews" );
    
    /** <p>A modifiable or non-modifiable factor that increases the risk of a patient 
     *  contracting this condition, e.home. age, coexisting condition.</p>
     */
    public static final OntProperty riskFactor = m_model.createOntProperty( "http://schema.org/riskFactor" );
    
    /** <p>Specific physiologic risks associated to the plan.</p> */
    public static final OntProperty risks = m_model.createOntProperty( "http://schema.org/risks" );
    
    /** <p>The vasculature the lymphatic structure runs, or efferents, to.</p> */
    public static final OntProperty runsTo = m_model.createOntProperty( "http://schema.org/runsTo" );
    
    /** <p>Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, 
     *  .Net Framework 3.0)</p>
     */
    public static final OntProperty runtime = m_model.createOntProperty( "http://schema.org/runtime" );
    
    /** <p>Any potential safety concern associated with the supplement. May include interactions 
     *  with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, 
     *  and documented efficacy of the supplement.</p>
     */
    public static final OntProperty safetyConsideration = m_model.createOntProperty( "http://schema.org/safetyConsideration" );
    
    /** <p>The currency (coded using ISO 4217, http://en.wikipedia.org/wiki/ISO_4217 
     *  used for the main salary information in this job posting.</p>
     */
    public static final OntProperty salaryCurrency = m_model.createOntProperty( "http://schema.org/salaryCurrency" );
    
    /** <p>URL of a reference Web page that unambiguously indicates the item's identity. 
     *  E.home. the URL of the item's Wikipedia page, Freebase page, or official website.</p>
     */
    public static final OntProperty sameAs = m_model.createOntProperty( "http://schema.org/sameAs" );
    
    /** <p>Full (compile ready) solution, code snippet, inline code, scripts, template.</p> */
    public static final OntProperty sampleType = m_model.createOntProperty( "http://schema.org/sampleType" );
    
    /** <p>The number of grams of saturated fat.</p> */
    public static final OntProperty saturatedFatContent = m_model.createOntProperty( "http://schema.org/saturatedFatContent" );
    
    /** <p>The time the object is scheduled to.</p> */
    public static final OntProperty scheduledTime = m_model.createOntProperty( "http://schema.org/scheduledTime" );
    
    /** <p>A link to a screenshot image of the app.</p> */
    public static final OntProperty screenshot = m_model.createOntProperty( "http://schema.org/screenshot" );
    
    /** <p>A season in a tv/radio series.</p> */
    public static final OntProperty season = m_model.createOntProperty( "http://schema.org/season" );
    
    /** <p>Position of the season within an ordered group of seasons.</p> */
    public static final OntProperty seasonNumber = m_model.createOntProperty( "http://schema.org/seasonNumber" );
    
    /** <p>A season in a tv/radio series. (legacy spelling; see singular form, season)</p> */
    public static final OntProperty seasons = m_model.createOntProperty( "http://schema.org/seasons" );
    
    /** <p>A preventative therapy used to prevent reoccurrence of the medical condition 
     *  after an initial episode of the condition.</p>
     */
    public static final OntProperty secondaryPrevention = m_model.createOntProperty( "http://schema.org/secondaryPrevention" );
    
    /** <p>A pointer to products or services sought by the organization or person (demand).</p> */
    public static final OntProperty seeks = m_model.createOntProperty( "http://schema.org/seeks" );
    
    /** <p>The organization or person making the offer.</p> */
    public static final OntProperty seller = m_model.createOntProperty( "http://schema.org/seller" );
    
    /** <p>A sub property of participant. The participant who is at the sending end of 
     *  the action.</p>
     */
    public static final OntProperty sender = m_model.createOntProperty( "http://schema.org/sender" );
    
    /** <p>The neurological pathway extension that inputs and sends information to the 
     *  brain or spinal cord.</p>
     */
    public static final OntProperty sensoryUnit = m_model.createOntProperty( "http://schema.org/sensoryUnit" );
    
    /** <p>The serial number or any alphanumeric identifier of a particular product. 
     *  When attached to an offer, it is a shortcut for the serial number of the product 
     *  included in the offer.</p>
     */
    public static final OntProperty serialNumber = m_model.createOntProperty( "http://schema.org/serialNumber" );
    
    /** <p>A possible serious complication and/or serious side effect of this therapy. 
     *  Serious adverse outcomes include those that are life-threatening; result in 
     *  death, disability, or permanent damage; require hospitalization or prolong 
     *  existing hospitalization; cause congenital anomalies or birth defects; or 
     *  jeopardize the patient and may require medical or surgical intervention to 
     *  prevent one of the outcomes in this definition.</p>
     */
    public static final OntProperty seriousAdverseOutcome = m_model.createOntProperty( "http://schema.org/seriousAdverseOutcome" );
    
    /** <p>The cuisine of the restaurant.</p> */
    public static final OntProperty servesCuisine = m_model.createOntProperty( "http://schema.org/servesCuisine" );
    
    /** <p>The geographic area where the service is provided.</p> */
    public static final OntProperty serviceArea = m_model.createOntProperty( "http://schema.org/serviceArea" );
    
    /** <p>The audience eligible for this service.</p> */
    public static final OntProperty serviceAudience = m_model.createOntProperty( "http://schema.org/serviceAudience" );
    
    /** <p>The location (e.home. civic structure, local business, etc.) where a person can
     *  go to access the service.</p>
     */
    public static final OntProperty serviceLocation = m_model.createOntProperty( "http://schema.org/serviceLocation" );
    
    /** <p>The operating organization, if different from the provider. This enables the 
     *  representation of services that are provided by an organization, but operated 
     *  by another organization like a subcontractor.</p>
     */
    public static final OntProperty serviceOperator = m_model.createOntProperty( "http://schema.org/serviceOperator" );
    
    /** <p>The phone number to use to access the service.</p> */
    public static final OntProperty servicePhone = m_model.createOntProperty( "http://schema.org/servicePhone" );
    
    /** <p>The address for accessing the service by mail.</p> */
    public static final OntProperty servicePostalAddress = m_model.createOntProperty( "http://schema.org/servicePostalAddress" );
    
    /** <p>The number to access the service by text message.</p> */
    public static final OntProperty serviceSmsNumber = m_model.createOntProperty( "http://schema.org/serviceSmsNumber" );
    
    /** <p>The type of service being offered, e.home. veterans' benefits, emergency relief,
     *  etc.</p>
     */
    public static final OntProperty serviceType = m_model.createOntProperty( "http://schema.org/serviceType" );
    
    /** <p>The website to access the service.</p> */
    public static final OntProperty serviceUrl = m_model.createOntProperty( "http://schema.org/serviceUrl" );
    
    /** <p>The serving size, in terms of the number of volume or mass</p> */
    public static final OntProperty servingSize = m_model.createOntProperty( "http://schema.org/servingSize" );
    
    /** <p>A sibling of the person.</p> */
    public static final OntProperty sibling = m_model.createOntProperty( "http://schema.org/sibling" );
    
    /** <p>A sibling of the person (legacy spelling; see singular form, sibling).</p> */
    public static final OntProperty siblings = m_model.createOntProperty( "http://schema.org/siblings" );
    
    /** <p>A sign detected by the test.</p> */
    public static final OntProperty signDetected = m_model.createOntProperty( "http://schema.org/signDetected" );
    
    /** <p>A sign or symptom of this condition. Signs are objective or physically observable 
     *  manifestations of the medical condition while symptoms are the subjective 
     *  experienceof the medical condition.</p>
     */
    public static final OntProperty signOrSymptom = m_model.createOntProperty( "http://schema.org/signOrSymptom" );
    
    /** <p>The significance associated with the superficial anatomy; as an example, how 
     *  characteristics of the superficial anatomy can suggest underlying medical 
     *  conditions or courses of treatment.</p>
     */
    public static final OntProperty significance = m_model.createOntProperty( "http://schema.org/significance" );
    
    /** <p>One of the more significant URLs on the page. Typically, these are the non-navigation 
     *  links that are clicked on the most.</p>
     */
    public static final OntProperty significantLink = m_model.createOntProperty( "http://schema.org/significantLink" );
    
    /** <p>The most significant URLs on the page. Typically, these are the non-navigation 
     *  links that are clicked on the most (legacy spelling; see singular form, significantLink).</p>
     */
    public static final OntProperty significantLinks = m_model.createOntProperty( "http://schema.org/significantLinks" );
    
    /** <p>Skills required to fulfill this role.</p> */
    public static final OntProperty skills = m_model.createOntProperty( "http://schema.org/skills" );
    
    /** <p>The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product 
     *  or service, or the product to which the offer refers.</p>
     */
    public static final OntProperty sku = m_model.createOntProperty( "http://schema.org/sku" );
    
    /** <p>The number of milligrams of sodium.</p> */
    public static final OntProperty sodiumContent = m_model.createOntProperty( "http://schema.org/sodiumContent" );
    
    /** <p>Version of the software instance.</p> */
    public static final OntProperty softwareVersion = m_model.createOntProperty( "http://schema.org/softwareVersion" );
    
    /** <p>The anatomical or organ system that the artery originates from.</p> */
    public static final OntProperty source = m_model.createOntProperty( "http://schema.org/source" );
    
    /** <p>The Organization on whose behalf the creator was working.</p> */
    public static final OntProperty sourceOrganization = m_model.createOntProperty( "http://schema.org/sourceOrganization" );
    
    /** <p>The neurological pathway that originates the neurons.</p> */
    public static final OntProperty sourcedFrom = m_model.createOntProperty( "http://schema.org/sourcedFrom" );
    
    /** <p>The range of spatial applicability of a dataset, e.home. for a dataset of New
     *  York weather, the state of New York.</p>
     */
    public static final OntProperty spatial = m_model.createOntProperty( "http://schema.org/spatial" );
    
    /** <p>Any special commitments associated with this job posting. Valid entries include 
     *  VeteranCommit, MilitarySpouseCommit, etc.</p>
     */
    public static final OntProperty specialCommitments = m_model.createOntProperty( "http://schema.org/specialCommitments" );
    
    /** <p>One of the domain specialities to which this org.p4535992.mvc.webapp page's content applies.</p> */
    public static final OntProperty specialty = m_model.createOntProperty( "http://schema.org/specialty" );
    
    /** <p>Sponsor of the study.</p> */
    public static final OntProperty sponsor = m_model.createOntProperty( "http://schema.org/sponsor" );
    
    /** <p>A sub property of location. The sports activity location where this action 
     *  occurred.</p>
     */
    public static final OntProperty sportsActivityLocation = m_model.createOntProperty( "http://schema.org/sportsActivityLocation" );
    
    /** <p>A sub property of location. The sports event where this action occurred.</p> */
    public static final OntProperty sportsEvent = m_model.createOntProperty( "http://schema.org/sportsEvent" );
    
    /** <p>A sub property of participant. The sports team that participated on this action.</p> */
    public static final OntProperty sportsTeam = m_model.createOntProperty( "http://schema.org/sportsTeam" );
    
    /** <p>The person's spouse.</p> */
    public static final OntProperty spouse = m_model.createOntProperty( "http://schema.org/spouse" );
    
    /** <p>The stage of the condition, if applicable.</p> */
    public static final OntProperty stage = m_model.createOntProperty( "http://schema.org/stage" );
    
    /** <p>The stage represented as a number, e.home. 3.</p> */
    public static final OntProperty stageAsNumber = m_model.createOntProperty( "http://schema.org/stageAsNumber" );
    
    /** <p>The start date and time of the event or item (in ISO 8601 date format).</p> */
    public static final OntProperty startDate = m_model.createOntProperty( "http://schema.org/startDate" );
    
    /** <p>When the Action was performed: start time. This is for actions that span a 
     *  period of time. e.home. John wrote a book from *January* to December.</p>
     */
    public static final OntProperty startTime = m_model.createOntProperty( "http://schema.org/startTime" );
    
    /** <p>The status of the study (enumerated).</p> */
    public static final OntProperty status = m_model.createOntProperty( "http://schema.org/status" );
    
    /** <p>Storage requirements (free space required).</p> */
    public static final OntProperty storageRequirements = m_model.createOntProperty( "http://schema.org/storageRequirements" );
    
    /** <p>The street address. For example, 1600 Amphitheatre Pkwy.</p> */
    public static final OntProperty streetAddress = m_model.createOntProperty( "http://schema.org/streetAddress" );
    
    /** <p>The units of an active ingredient's strength, e.home. mg.</p> */
    public static final OntProperty strengthUnit = m_model.createOntProperty( "http://schema.org/strengthUnit" );
    
    /** <p>The value of an active ingredient's strength, e.home. 325.</p> */
    public static final OntProperty strengthValue = m_model.createOntProperty( "http://schema.org/strengthValue" );
    
    /** <p>The name given to how bone physically connects to each other.</p> */
    public static final OntProperty structuralClass = m_model.createOntProperty( "http://schema.org/structuralClass" );
    
    /** <p>A medical study or trial related to this entity.</p> */
    public static final OntProperty study = m_model.createOntProperty( "http://schema.org/study" );
    
    /** <p>Specifics about the observational study design (enumerated).</p> */
    public static final OntProperty studyDesign = m_model.createOntProperty( "http://schema.org/studyDesign" );
    
    /** <p>The location in which the study is taking/took place.</p> */
    public static final OntProperty studyLocation = m_model.createOntProperty( "http://schema.org/studyLocation" );
    
    /** <p>A subject of the study, i.e. one of the medical conditions, therapies, devices, 
     *  drugs, etc. investigated by the study.</p>
     */
    public static final OntProperty studySubject = m_model.createOntProperty( "http://schema.org/studySubject" );
    
    /** <p>An Event that is part of this event. For example, a conference event includes 
     *  many presentations, each are a subEvent of the conference.</p>
     */
    public static final OntProperty subEvent = m_model.createOntProperty( "http://schema.org/subEvent" );
    
    /** <p>Events that are a part of this event. For example, a conference event includes 
     *  many presentations, each are subEvents of the conference (legacy spelling; 
     *  see singular form, subEvent).</p>
     */
    public static final OntProperty subEvents = m_model.createOntProperty( "http://schema.org/subEvents" );
    
    /** <p>A relationship between two organizations where the first includes the second, 
     *  e.home., as a subsidiary. See also: the more specific 'department' property.</p>
     */
    public static final OntProperty subOrganization = m_model.createOntProperty( "http://schema.org/subOrganization" );
    
    /** <p>The substage, e.home. 'a' for Stage IIIa.</p> */
    public static final OntProperty subStageSuffix = m_model.createOntProperty( "http://schema.org/subStageSuffix" );
    
    /** <p>Component (sub-)structure(s) that comprise this anatomical structure.</p> */
    public static final OntProperty subStructure = m_model.createOntProperty( "http://schema.org/subStructure" );
    
    /** <p>A component test of the panel.</p> */
    public static final OntProperty subTest = m_model.createOntProperty( "http://schema.org/subTest" );
    
    /** <p>A more specific type of the condition, where applicable, for example 'Type 
     *  1 Diabetes', 'Type 2 Diabetes', or 'Gestational Diabetes' for Diabetes.</p>
     */
    public static final OntProperty subtype = m_model.createOntProperty( "http://schema.org/subtype" );
    
    /** <p>A pointer from a newer variant of a product to its previous, often discontinued 
     *  predecessor.</p>
     */
    public static final OntProperty successorOf = m_model.createOntProperty( "http://schema.org/successorOf" );
    
    /** <p>The number of grams of sugar.</p> */
    public static final OntProperty sugarContent = m_model.createOntProperty( "http://schema.org/sugarContent" );
    
    /** <p>The gender of the person or audience.</p> */
    public static final OntProperty suggestedGender = m_model.createOntProperty( "http://schema.org/suggestedGender" );
    
    /** <p>Maximal age recommended for viewing content</p> */
    public static final OntProperty suggestedMaxAge = m_model.createOntProperty( "http://schema.org/suggestedMaxAge" );
    
    /** <p>Minimal age recommended for viewing content</p> */
    public static final OntProperty suggestedMinAge = m_model.createOntProperty( "http://schema.org/suggestedMinAge" );
    
    /** <p>An event that this event is a part of. For example, a collection of individual 
     *  music performances might each have a music festival as their superEvent.</p>
     */
    public static final OntProperty superEvent = m_model.createOntProperty( "http://schema.org/superEvent" );
    
    /** <p>The area to which the artery supplies blood to.</p> */
    public static final OntProperty supplyTo = m_model.createOntProperty( "http://schema.org/supplyTo" );
    
    /** <p>The description of a node in an established educational framework.</p> */
    public static final OntProperty targetDescription = m_model.createOntProperty( "http://schema.org/targetDescription" );
    
    /** <p>The name of a node in an established educational framework.</p> */
    public static final OntProperty targetName = m_model.createOntProperty( "http://schema.org/targetName" );
    
    /** <p>Type of app development: phone, Metro style, desktop, XBox, etc.</p> */
    public static final OntProperty targetPlatform = m_model.createOntProperty( "http://schema.org/targetPlatform" );
    
    /** <p>Characteristics of the population for which this is intended, or which typically 
     *  uses it, e.home. 'adults'.</p>
     */
    public static final OntProperty targetPopulation = m_model.createOntProperty( "http://schema.org/targetPopulation" );
    
    /** <p>Target Operating System / Product to which the code applies. If applies to 
     *  several versions, just the product name can be used.</p>
     */
    public static final OntProperty targetProduct = m_model.createOntProperty( "http://schema.org/targetProduct" );
    
    /** <p>The URL of a node in an established educational framework.</p> */
    public static final OntProperty targetUrl = m_model.createOntProperty( "http://schema.org/targetUrl" );
    
    /** <p>The Tax / Fiscal ID of the organization or person, e.home. the TIN in the US
     *  or the CIF/NIF in Spain.</p>
     */
    public static final OntProperty taxID = m_model.createOntProperty( "http://schema.org/taxID" );
    
    /** <p>The telephone number.</p> */
    public static final OntProperty telephone = m_model.createOntProperty( "http://schema.org/telephone" );
    
    /** <p>The range of temporal applicability of a dataset, e.home. for a 2011 census dataset,
     *  the year 2011 (in ISO 8601 time interval format).</p>
     */
    public static final OntProperty temporal = m_model.createOntProperty( "http://schema.org/temporal" );
    
    /** <p>The textual content of this CreativeWork.</p> */
    public static final OntProperty text = m_model.createOntProperty( "http://schema.org/text" );
    
    /** <p>Thumbnail image for an image or video.</p> */
    public static final OntProperty thumbnail = m_model.createOntProperty( "http://schema.org/thumbnail" );
    
    /** <p>A thumbnail image relevant to the Thing.</p> */
    public static final OntProperty thumbnailUrl = m_model.createOntProperty( "http://schema.org/thumbnailUrl" );
    
    /** <p>The exchange traded instrument associated with a Corporation object. The tickerSymbol 
     *  is expressed as an exchange and an instrument name separated by a space character. 
     *  For the exchange component of the tickerSymbol attribute, we reccommend using 
     *  the controlled vocaulary of Market Identifier Codes (MIC) specified in ISO15022.</p>
     */
    public static final OntProperty tickerSymbol = m_model.createOntProperty( "http://schema.org/tickerSymbol" );
    
    /** <p>Approximate or typical time it takes to work with or through this learning 
     *  resource for the typical intended target audience, e.home. 'P30M', 'P1H25M'.</p>
     */
    public static final OntProperty timeRequired = m_model.createOntProperty( "http://schema.org/timeRequired" );
    
    /** <p>The type of tissue sample required for the test.</p> */
    public static final OntProperty tissueSample = m_model.createOntProperty( "http://schema.org/tissueSample" );
    
    /** <p>The title of the job.</p> */
    public static final OntProperty title = m_model.createOntProperty( "http://schema.org/title" );
    
    /** <p>A sub property of location. The final location of the object or the agent 
     *  after the action.</p>
     */
    public static final OntProperty toLocation = m_model.createOntProperty( "http://schema.org/toLocation" );
    
    /** <p>The total time it takes to prepare and cook the recipe, in ISO 8601 duration 
     *  format.</p>
     */
    public static final OntProperty totalTime = m_model.createOntProperty( "http://schema.org/totalTime" );
    
    /** <p>A music recording (track)�usually a single song.</p> */
    public static final OntProperty track = m_model.createOntProperty( "http://schema.org/track" );
    
    /** <p>Shipper tracking number.</p> */
    public static final OntProperty trackingNumber = m_model.createOntProperty( "http://schema.org/trackingNumber" );
    
    /** <p>Tracking url for the parcel delivery.</p> */
    public static final OntProperty trackingUrl = m_model.createOntProperty( "http://schema.org/trackingUrl" );
    
    /** <p>A music recording (track)�usually a single song (legacy spelling; see singular 
     *  form, track).</p>
     */
    public static final OntProperty tracks = m_model.createOntProperty( "http://schema.org/tracks" );
    
    /** <p>The trailer of a movie or tv/radio series, season, or episode.</p> */
    public static final OntProperty trailer = m_model.createOntProperty( "http://schema.org/trailer" );
    
    /** <p>The number of grams of trans fat.</p> */
    public static final OntProperty transFatContent = m_model.createOntProperty( "http://schema.org/transFatContent" );
    
    /** <p>If this MediaObject is an AudioObject or VideoObject, the transcript of that 
     *  object.</p>
     */
    public static final OntProperty transcript = m_model.createOntProperty( "http://schema.org/transcript" );
    
    /** <p>How the disease spreads, either as a route or vector, for example 'direct 
     *  contact', 'Aedes aegypti', etc.</p>
     */
    public static final OntProperty transmissionMethod = m_model.createOntProperty( "http://schema.org/transmissionMethod" );
    
    /** <p>Specifics about the trial design (enumerated).</p> */
    public static final OntProperty trialDesign = m_model.createOntProperty( "http://schema.org/trialDesign" );
    
    /** <p>The anatomical or organ system that the vein flows into; a larger structure 
     *  that the vein connects to.</p>
     */
    public static final OntProperty tributary = m_model.createOntProperty( "http://schema.org/tributary" );
    
    /** <p>The product that this structured value is referring to.</p> */
    public static final OntProperty typeOfGood = m_model.createOntProperty( "http://schema.org/typeOfGood" );
    
    /** <p>The typical expected age range, e.home. '7-9', '11-'.</p> */
    public static final OntProperty typicalAgeRange = m_model.createOntProperty( "http://schema.org/typicalAgeRange" );
    
    /** <p>A medical test typically performed given this condition.</p> */
    public static final OntProperty typicalTest = m_model.createOntProperty( "http://schema.org/typicalTest" );
    
    /** <p>The unit of measurement given using the UN/CEFACT Common Code (3 characters).</p> */
    public static final OntProperty unitCode = m_model.createOntProperty( "http://schema.org/unitCode" );
    
    /** <p>The number of grams of unsaturated fat.</p> */
    public static final OntProperty unsaturatedFatContent = m_model.createOntProperty( "http://schema.org/unsaturatedFatContent" );
    
    /** <p>Date when this media object was uploaded to this site.</p> */
    public static final OntProperty uploadDate = m_model.createOntProperty( "http://schema.org/uploadDate" );
    
    /** <p>URL of the item.</p> */
    public static final OntProperty url = m_model.createOntProperty( "http://schema.org/url" );
    
    /** <p>A condition the test is used to diagnose.</p> */
    public static final OntProperty usedToDiagnose = m_model.createOntProperty( "http://schema.org/usedToDiagnose" );
    
    /** <p>Device used to perform the test.</p> */
    public static final OntProperty usesDevice = m_model.createOntProperty( "http://schema.org/usesDevice" );
    
    /** <p>The time validity of the permit.</p> */
    public static final OntProperty validFor = m_model.createOntProperty( "http://schema.org/validFor" );
    
    /** <p>The date when the item becomes valid.</p> */
    public static final OntProperty validFrom = m_model.createOntProperty( "http://schema.org/validFrom" );
    
    /** <p>The geographic area where the permit is valid.</p> */
    public static final OntProperty validIn = m_model.createOntProperty( "http://schema.org/validIn" );
    
    /** <p>The end of the validity of offer, price specification, or opening hours data.</p> */
    public static final OntProperty validThrough = m_model.createOntProperty( "http://schema.org/validThrough" );
    
    /** <p>The date when the item is no longer valid.</p> */
    public static final OntProperty validUntil = m_model.createOntProperty( "http://schema.org/validUntil" );
    
    /** <p>The value of the product characteristic.</p> */
    public static final OntProperty value = m_model.createOntProperty( "http://schema.org/value" );
    
    /** <p>Specifies whether the applicable value-added tax (VAT) is included in the 
     *  price specification or not.</p>
     */
    public static final OntProperty valueAddedTaxIncluded = m_model.createOntProperty( "http://schema.org/valueAddedTaxIncluded" );
    
    /** <p>A pointer to a secondary value that provides additional information on the 
     *  original value, e.home. a reference temperature.</p>
     */
    public static final OntProperty valueReference = m_model.createOntProperty( "http://schema.org/valueReference" );
    
    /** <p>The Value-added Tax ID of the organisation or person.</p> */
    public static final OntProperty vatID = m_model.createOntProperty( "http://schema.org/vatID" );
    
    /** <p>A sub property of participant. The seller.The participant/person/organization 
     *  that sold the object.</p>
     */
    public static final OntProperty vendor = m_model.createOntProperty( "http://schema.org/vendor" );
    
    /** <p>The version of the CreativeWork embodied by a specified resource.</p> */
    public static final OntProperty version = m_model.createOntProperty( "http://schema.org/version" );
    
    /** <p>An embedded video object.</p> */
    public static final OntProperty video = m_model.createOntProperty( "http://schema.org/video" );
    
    /** <p>The frame size of the video.</p> */
    public static final OntProperty videoFrameSize = m_model.createOntProperty( "http://schema.org/videoFrameSize" );
    
    /** <p>The quality of the video.</p> */
    public static final OntProperty videoQuality = m_model.createOntProperty( "http://schema.org/videoQuality" );
    
    /** <p>Any FDA or other warnings about the drug (text or URL).</p> */
    public static final OntProperty warning = m_model.createOntProperty( "http://schema.org/warning" );
    
    /** <p>The warranty promise(s) included in the offer.</p> */
    public static final OntProperty warranty = m_model.createOntProperty( "http://schema.org/warranty" );
    
    /** <p>The warranty promise(s) included in the offer.</p> */
    public static final OntProperty warrantyPromise = m_model.createOntProperty( "http://schema.org/warrantyPromise" );
    
    /** <p>The scope of the warranty promise.</p> */
    public static final OntProperty warrantyScope = m_model.createOntProperty( "http://schema.org/warrantyScope" );
    
    /** <p>The weight of the product.</p> */
    public static final OntProperty weight = m_model.createOntProperty( "http://schema.org/weight" );
    
    /** <p>The width of the item.</p> */
    public static final OntProperty width = m_model.createOntProperty( "http://schema.org/width" );
    
    /** <p>A sub property of participant. The winner of the action.</p> */
    public static final OntProperty winner = m_model.createOntProperty( "http://schema.org/winner" );
    
    /** <p>The number of words in the text of the Article.</p> */
    public static final OntProperty wordCount = m_model.createOntProperty( "http://schema.org/wordCount" );
    
    /** <p>The typical working hours for this job (e.home. 1st shift, night shift, 8am-5pm).</p> */
    public static final OntProperty workHours = m_model.createOntProperty( "http://schema.org/workHours" );
    
    /** <p>A contact location for a person's place of work.</p> */
    public static final OntProperty workLocation = m_model.createOntProperty( "http://schema.org/workLocation" );
    
    /** <p>Quantitative measure of the physiologic output of the exercise; also referred 
     *  to as energy expenditure.</p>
     */
    public static final OntProperty workload = m_model.createOntProperty( "http://schema.org/workload" );
    
    /** <p>Organizations that the person works for.</p> */
    public static final OntProperty worksFor = m_model.createOntProperty( "http://schema.org/worksFor" );
    
    /** <p>The lowest value allowed in this rating system. If worstRating is omitted, 
     *  1 is assumed.</p>
     */
    public static final OntProperty worstRating = m_model.createOntProperty( "http://schema.org/worstRating" );
    
    /** <p>The size of the business in annual revenue.</p> */
    public static final OntProperty yearlyRevenue = m_model.createOntProperty( "http://schema.org/yearlyRevenue" );
    
    /** <p>The age of the business.</p> */
    public static final OntProperty yearsInOperation = m_model.createOntProperty( "http://schema.org/yearsInOperation" );
    
    public static final OntProperty postalAddress = m_model.createOntProperty( "http://schema.org/postalAddress" );
    
}
