<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.p4535992</groupId>
    <artifactId>EAT</artifactId>
    <version>1.6.8</version>

    <packaging>pom</packaging>
    <name>${project.artifactId}</name>
    <url>http://maven.apache.org</url>

    <scm>
        <developerConnection>scm:git:github.com/p4535992/EAT.git</developerConnection>
        <connection>scm:git:https://github.com/p4535992/EAT.git</connection>
        <url>http://svn.apache.org/viewvc/maven</url>
    </scm>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/p4535992/EAT/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!--
        <settings>
            <localRepository>${project.basedir}/m2</localRepository>
        </settings>
    -->

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <properties>
        <!-- Generic properties -->
        <downloadSources>true</downloadSources>
        <downloadJavadocs>true</downloadJavadocs>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <java-version>1.8</java-version>
        <encoding>UTF-8</encoding>
        <language-level>1.8</language-level>
        <!-- Version of the Maven properties -->
        <maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
        <maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
        <maven-source-plugin.version>2.3</maven-source-plugin.version>
        <maven-javadoc-plugin.version>2.3</maven-javadoc-plugin.version>
        <maven-exec-plugin.version>1.1.1</maven-exec-plugin.version>
        <maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
        <!--<com.github.p4535992.gate-basic.version>1.6.8</com.github.p4535992.gate-basic.version>-->
        <com.github.p4535992.ExtractInfo.version>1.6.8</com.github.p4535992.ExtractInfo.version>
        <!-- LOGGING -->
        <spring-boot-starter-logging.version>1.3.0.RELEASE</spring-boot-starter-logging.version>
        <org.slf4j.version>1.7.13</org.slf4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- LOGGING -->
            <!-- jul-to-slf4j + jcl-over-slf4j + log4j-over-slf4j + logback-classic -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-logging</artifactId>
                <version>${spring-boot-starter-logging.version}</version>
                <!-- <exclusions>
                     <exclusion>
                         <groupId>org.slf4j</groupId>
                         <artifactId>slf4j-api</artifactId>
                     </exclusion>
                 </exclusions>-->
            </dependency>
            <!-- The SLF4J - take out because already present in logback classic -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${org.slf4j.version}</version>
                <optional>true</optional>
            </dependency>
            <!-- Since slf4j is a bridge, you need an implementation of it that would
            redirect all calls to slf4j or JCL. Following is to perform logging using
            the basic implementation, choose your preferred implementation
            (it seems you were using logback). -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.github.p4535992</groupId>
                <artifactId>extractInfo</artifactId>
                <version>${com.github.p4535992.ExtractInfo.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>com.github.p4535992</groupId>
            <artifactId>extractInfo</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <!-- The SLF4J - take out because already present in logback classic -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- MAVEN PLUGIN DEPENDENCY-->
        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${maven-exec-plugin.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>4.1.6.RELEASE</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>nbm-maven-plugin</artifactId>
                <version>3.7</version>
                <extensions>true</extensions>
            </plugin>
           
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>${maven-eclipse-plugin.version}</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${language-level}</source>
                    <target>${language-level}</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <encoding>${encoding}</encoding>
                    <debug>true</debug>
                    <debuglevel>lines,vars,source</debuglevel>
                    <!-- DO NOT include log4j.properties file in your Jar -->
                    <excludes>
                        <exclude>**/log4j.properties</exclude>
                    </excludes>
                    <!-- <archive>
                         <manifest>
                             &lt;!&ndash; Jar file entry point &ndash;&gt;
                             <mainClass>home.MainExtractInfo</mainClass>
                         </manifest>
                     </archive>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- This will tell the javadoc execution to ignore all errors 
                and not let the build fail. -->
                <!--<configuration>
                    <additionalparam>-Xdoclint:none</additionalparam>
                    <failOnError>false</failOnError>
                </configuration>-->
            </plugin>
            <!-- ****************************************-->
            <!-- Copy dependency jar to a m2 folder  -->
            <!-- ****************************************-->
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>       
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>../m2</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>                                        
                    </execution>
                </executions>
            </plugin>
            -->

            <!--
          mvn exec:java -Dexec.mainClass="com.github.p4535992.main.home.Main"
          mvn -X exec:java -Dexec.mainClass="com.github.p4535992.main.home.Main"
          mvn -X clean install exec:java -Dexec.mainClass="com.github.p4535992.main.home.Main" -Dexec.classpathScope=test -e
          http://stackoverflow.com/questions/27518544/running-a-class-file-through-mvn-execexec
           org.apache.maven.lifecycle.internal.MojoExecutor.execute
          -->
            <!-- mvn exec:java -Dexec.mainClass="com.github.p4535992.extractor.home.Main"-->
            <!-- mvn -Dexec.args=\"-classpath %classpath com.github.p4535992.extractor.home.ExtractInfoCompany\"
             -Dexec.executable=java
            -Dexec.classpathScope=runtime
            -Dmaven.ext.class.path=\"C:\\Program Files\\NetBeans 8.1\\java\\maven-nblib\\netbeans-eventspy.jar\"
            -Dfile.encoding=UTF-8 process-classes org.codehaus.mojo:exec-maven-plugin:1.2.1:exec\""
-->
            <!-- mvn exec:java -Dexec.mainClass="com.github.p4535992.main.home.Main" -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includePluginDependencies>true</includePluginDependencies>
                    <mainClass>com.github.p4535992.main.home.Main</mainClass>
                    <arguments>
                    </arguments>
                    <!--<systemProperties>
                        <systemProperty>
                            <key>myproperty</key>
                            <value>myvalue</value>
                        </systemProperty>
                    </systemProperties>-->
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>